-- hi wiggly wiggles why dont you try making better patches? :P
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v67=0;local v68;while true do if (0==v67) then v68=v3(v1(v30,16));if v19 then local v83=v6(v68,v19);v19=nil;return v83;else return v68;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v69=0 + 0;local v70;while true do if (v69==(0 + 0)) then v70=(v31/((5 -3)^(v32-((1531 -(1352 + 176)) -2))))%((1753 -(1167 + 584))^(((v33-(1 + 0)) -(v32-(119 -(67 + 51)))) + 1));return v70-(v70%(973 -(82 + (2687 -1797))));end end else local v71=2^(v32-1);return (((v31%(v71 + v71))>=v71) and (2 -1)) or (490 -(324 + 166));end end local function v21()local v38=1687 -(1153 + 129 + 405);local v39;while true do if (v38==(542 -(121 + 420))) then return v39;end if (v38==0) then v39=v2(v16,v18,v18);v18=v18 + (1582 -(1333 + 248));v38=1 -0;end end end local function v22()local v40=0 -0;local v41;local v42;while true do if (v40==0) then v41,v42=v2(v16,v18,v18 + 2 + 0);v18=v18 + (208 -(190 + 16));v40=2 -(1 -0);end if (v40==(1 -0)) then return (v42 * (1395 -(167 + 972))) + v41;end end end local function v23()local v43=0 + 0 + 0;local v44;local v45;local v46;local v47;while true do if (v43==(0 -(739 -(728 + 11)))) then v44,v45,v46,v47=v2(v16,v18,v18 + 2 + 1);v18=v18 + (1191 -(592 + 595));v43=1 + 0;end if (v43==(2 -1)) then return (v47 * 16777216) + (v46 * 65536) + (v45 * (37 + 219)) + v44;end end end local function v24()local v48=0 + 0;local v49;local v50;while true do if (v48==(1 + 0)) then return (( -(3 -1) * v20(v50,1269 -(692 + 545))) + 1) * (((3 -1) + 0)^(v20(v50,1175 -(398 + 756),1944 -(1150 + 763)) -(2750 -1727))) * ((((v20(v50,2 -1,45 -25) * ((658 -(51 + 262 + 343))^32)) + v49)/((3 -1)^(102 -50))) + (2 -1));end if ((1956 -(1063 + 893))==v48) then v49=v23();v50=v23();v48=1124 -(911 + 212);end end end local function v25(v34)local v51=0;local v52;local v53;while true do if (v51==3) then return v7(v53);end if (v51==(2 + 0)) then v53={};for v72=1 + 0, #v52 do v53[v72]=v3(v2(v4(v52,v72,v72)));end v51=2 + 1;end if (v51==(1 + 0)) then v52=v4(v16,v18,(v18 + v34) -((102 + 61) -(140 + 22)));v18=v18 + v34;v51=799 -(379 + 418);end if (v51==(0 + 0 + 0)) then v52=nil;if  not v34 then local v74=(0 -0) -(685 -(600 + 85));while true do if (((1716 -(1385 + 60)) -(200 + 71))==v74) then v34=v23();if (v34==(0 + 0)) then return "";end break;end end end v51=2 -1;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v54=0 -0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v54==(3 + 1)) then while true do if (v55==(3 + 0)) then v62=nil;while true do local v84=0 + 0;local v85;local v86;while true do if (v84~=1) then else while true do if (v85==(0 -0)) then v86=0;while true do if (v86~=0) then else local v104=0;while true do if (v104==1) then v86=1578 -(609 + 968);break;end if (v104~=0) then else if (v56~=(1727 -(216 + 1510))) then else local v107=0;local v108;while true do if (v107~=(0 -0)) then else v108=0;while true do if (v108==(0 + 0)) then local v218=0;while true do if (0==v218) then local v231=1194 -(62 + 1132);while true do if (v231~=1) then else v218=1164 -(90 + 1073);break;end if (v231~=0) then else v61=v23();v62={};v231=1 + 0;end end end if (v218==1) then v108=4 -3;break;end end end if (v108~=(186 -(80 + 105))) then else for v223=1,v61 do local v224=0;local v225;local v226;local v227;local v228;while true do if (v224==(0 + 0)) then v225=0 + 0;v226=nil;v224=1;end if (v224==(1132 -(448 + 682))) then while true do if (v225~=(777 -(733 + 44))) then else local v284=0;while true do if (v284==1) then v225=1;break;end if (v284~=(0 -0)) then else v226=0;v227=nil;v284=1;end end end if (v225==(3 -2)) then v228=nil;while true do if (v226==(1 + 0)) then if (v227==(2 -1)) then v228=v21()~=(0 + 0);elseif (v227==(190 -(90 + 98))) then v228=v24();elseif (v227==3) then v228=v25();end v62[v223]=v228;break;end if (v226==0) then local v309=1390 -(977 + 413);local v310;while true do if ((0 -0)~=v309) then else v310=0;while true do if (v310==0) then local v337=0;local v338;while true do if (v337==(362 -(322 + 40))) then v338=0 + 0;while true do if (v338~=(1772 -(52 + 1719))) then else v310=1;break;end if (v338==(0 -0)) then v227=v21();v228=nil;v338=1;end end break;end end end if (v310==(154 -(44 + 109))) then v226=1 -0;break;end end break;end end end end break;end end break;end if (v224~=(1339 -(544 + 794))) then else v227=nil;v228=nil;v224=2;end end end v60[3]=v21();v108=947 -(756 + 189);end if (v108==(3 -1)) then v56=2;break;end end break;end end end if (v56~=2) then else local v109=0 + 0;local v110;while true do if (v109==(563 -(463 + 100))) then v110=0;while true do local v152=0 -0;while true do if (v152==(0 -0)) then if (v110==(239 -(4 + 234))) then local v232=1044 -(181 + 863);while true do if (v232~=0) then else for v285=1,v23() do v59[v285]=v23();end return v60;end end end if (v110~=(0 + 0)) then else local v233=512 -(167 + 345);local v234;while true do if (v233~=(987 -(780 + 207))) then else v234=0 -0;while true do if (v234==(1505 -(1448 + 57))) then for v311=4 -3,v23() do local v312=137 -(113 + 24);local v313;local v314;while true do if (v312~=0) then else v313=0;v314=nil;v312=1 + 0;end if (v312==(1661 -(1605 + 55))) then while true do if (v313==0) then v314=v21();if (v20(v314,1,3 -2)==(0 + 0)) then local v348=0 + 0;local v349;local v350;local v351;local v352;local v353;while true do if ((0 -0)~=v348) then else v349=0;v350=nil;v348=1;end if (1==v348) then v351=nil;v352=nil;v348=1 + 1;end if (2==v348) then v353=nil;while true do if (v349==0) then local v368=1998 -(330 + 1668);while true do if (v368==(0 + 0)) then v350=0 + 0;v351=nil;v368=1;end if (v368==(2 -1)) then v349=3 -2;break;end end end if ((450 -(93 + 356))~=v349) then else local v369=0;while true do if (v369==0) then v352=nil;v353=nil;v369=1 + 0;end if (v369~=(1757 -(1370 + 386))) then else v349=2;break;end end end if (v349~=(3 -1)) then else while true do if (v350~=3) then else if (v20(v352,3,3)==(1 + 0)) then v353[1686 -(1187 + 495)]=v62[v353[4]];end v57[v311]=v353;break;end if (v350==(1157 -(800 + 356))) then local v375=0;while true do if (0==v375) then v353={v22(),v22(),nil,nil};if (v351==0) then local v383=0 + 0;local v384;while true do if (v383~=0) then else v384=0;while true do if (v384==0) then v353[3]=v22();v353[1234 -(553 + 677)]=v22();break;end end break;end end elseif (v351==(1785 -(636 + 1148))) then v353[3]=v23();elseif (v351==(2 + 0)) then v353[1 + 2]=v23() -(2^16);elseif (v351==3) then local v392=0;local v393;local v394;while true do if (1~=v392) then else while true do if (0==v393) then v394=0 -0;while true do if (v394==(0 -0)) then v353[3]=v23() -(2^16);v353[4]=v22();break;end end break;end end break;end if ((1753 -(1115 + 638))==v392) then local v397=0;while true do if (v397~=0) then else v393=0 -0;v394=nil;v397=1 + 0;end if (v397==(1 + 0)) then v392=1 + 0;break;end end end end end v375=1 + 0;end if (v375~=1) then else v350=2;break;end end end if (v350==0) then v351=v20(v314,2,3);v352=v20(v314,4,6);v350=1 + 0;end if (2==v350) then local v376=0;local v377;while true do if (v376==(0 + 0)) then v377=0 + 0;while true do if ((1345 -(1194 + 151))~=v377) then else local v385=1475 -(741 + 734);while true do if (v385==(0 -0)) then if (v20(v352,1 + 0,1)==(58 -(48 + 9))) then v353[1439 -(682 + 755)]=v62[v353[1071 -(634 + 435)]];end if (v20(v352,510 -(139 + 369),2)==(1 + 0)) then v353[3]=v62[v353[5 -2]];end v385=1;end if ((726 -(681 + 44))~=v385) then else v377=2 -1;break;end end end if (v377==1) then v350=4 -1;break;end end break;end end end end break;end end break;end end end break;end end break;end end end for v315=1 + 0,v23() do v58[v315-(95 -(61 + 33))]=v28();end v234=2 -1;end if ((4 -3)~=v234) then else v110=1;break;end end break;end end end break;end end end break;end end end v104=2 -1;end end end if (v86~=(3 -2)) then else if (v56==0) then local v105=0 + 0;local v106;while true do if (v105==(0 -0)) then v106=0;while true do if (v106~=0) then else local v111=0 -0;local v112;while true do if (v111==0) then v112=0;while true do if (v112==1) then v106=1 + 0;break;end if (v112~=0) then else local v235=0;while true do if (v235==(0 + 0)) then v57={};v58={};v235=1604 -(174 + 1429);end if (v235~=(1478 -(998 + 479))) then else v112=3 -2;break;end end end end break;end end end if (v106~=(647 -(451 + 195))) then else local v113=0 + 0;local v114;while true do if (v113~=(0 -0)) then else v114=0 + 0;while true do if (1==v114) then v106=2 -0;break;end if (v114~=(174 -(120 + 54))) then else local v236=0 + 0;while true do if (v236==(3 -2)) then v114=1;break;end if (v236~=(1616 -(1587 + 29))) then else v59={};v60={v57,v58,nil,v59};v236=1;end end end end break;end end end if (v106==2) then v56=1 + 0;break;end end break;end end end break;end end break;end end break;end if ((0 + 0)==v84) then v85=0;v86=nil;v84=1;end end end break;end if ((0 -0)==v55) then v56=0 + 0;v57=nil;v55=1;end if (v55==(1798 -(91 + 1705))) then local v81=0;while true do if (v81~=(0 + 0)) then else v60=nil;v61=nil;v81=1;end if (v81==1) then v55=2 + 1;break;end end end if (v55==1) then local v82=0;while true do if (v82~=0) then else v58=nil;v59=nil;v82=1;end if (v82==(1 + 0)) then v55=2;break;end end end end break;end if (v54==0) then v55=0;v56=nil;v54=1;end if (v54==3) then v61=nil;v62=nil;v54=4;end if (v54==(799 -(461 + 337))) then v57=nil;v58=nil;v54=2;end if (v54==2) then v59=nil;v60=nil;v54=3;end end end local function v29(v35,v36,v37)local v63=0;local v64;local v65;local v66;while true do if (v63==1) then v66=v35[3];return function(...)local v75=0;local v76;local v77;local v78;local v79;local v80;while true do if (v75==3) then A,B=v27(v11(v80));if  not A[1] then local v87=v35[4][v76] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (v75==1) then v78={...};v79=v12("#",...) -1;v75=2;end if (v75==0) then v76=1;v77= -1;v75=1;end if (v75==2) then v80=nil;function v80()local v88=v64;local v89=Const;local v90=v65;local v91=v66;local v92=v27;local v93={};local v94={};local v95={};for v99=0,v79 do if ((v99>=v91) or (4775<=(1117 + 1672 + 1141))) then v93[v99-v91]=v78[v99 + 1 + 0 + (0 -0)];else v95[v99]=v78[v99 + (1 -0)];end end local v96=(v79-v91) + ((471 + 460) -((818 -(173 + 188)) + 473));local v97;local v98;while true do local v100=357 -(148 + 209);while true do if ((((6011 -(25 + 47)) -3522)==((15741 -9769) -3555)) and ((1797 -(1758 + 38))==v100)) then if (((6366 -2702)>=(1253 + 446)) and (v98<=21)) then if (((4580 -(223 + 51 + 1522))<=((6924 -3826) + 280)) and (v98<=(1677 -(1041 + 626)))) then if (((3213 + 1406)>=((5458 + 78) -(1323 + 446))) and (v98<=4)) then if ((v98<=(1 + 0)) or (4962<(2701 -(2169 -893)))) then if (((5712 -(361 + 1431))<4600) and (v98>(627 -(258 + 369)))) then v37[v97[2 + 1]]=v95[v97[2 + 0]];else local v116=0 + 0;local v117;local v118;local v119;while true do if (((785 + 866)==(2 + 153 + 158 + 1338)) and (v116==(1 -0))) then v119=nil;while true do if ((4930>(4821 -(55 + 384))) and (v117==(2 -1))) then while true do if (((4298 -2213)>=(3034 -(2609 -1020))) and (v118==(0 + 0))) then v119=v97[2];v95[v119](v13(v95,v119 + (1742 -(1602 + 139)),v97[879 -(736 + 140)]));break;end end break;end if (((166 + 1357)>(3046 -1572)) and (v117==(0 -0))) then local v237=1654 -(1531 + 123);while true do if (((2986 -(760 + 185))==(3230 -(141 + 1048))) and (v237==(0 + 0))) then v118=0;v119=nil;v237=1;end if ((v237==(1 -0)) or ((1263 + 1040)>(3105 -(181 + 127)))) then v117=1 + 0;break;end end end end break;end if (((12012 -7112)==(15757 -10857)) and (v116==(0 -0))) then v117=0;v118=nil;v116=1 + 0;end end end elseif ((v98<=(607 -(154 + 445 + 6))) or (127==(9475 -6038))) then local v120=0 + 0;local v121;local v122;while true do if ((2627==2627) and (v120==(1 -0))) then while true do if ((1380>=292) and (v121==(630 -(193 + 437)))) then v122=v97[1 + 1];do return v13(v95,v122,v122 + v97[3]);end break;end end break;end if (((5049 -(1235 + 365))>1332) and (v120==0)) then local v220=0 -0;while true do if ((1==v220) or ((765 + 226)>(1991 -822))) then v120=489 -(233 + 255);break;end if ((v220==0) or ((4325 -(2682 -(14 + 22)))>=(17282 -12517))) then v121=0;v122=nil;v220=1;end end end end elseif ((v98==3) or ((4447 -(769 + 165))<=(6843 -3906))) then v76=v97[1226 -((1738 -902) + 387)];else v95[v97[2]]=v95[v97[653 -(92 + 558)]][v97[1664 -(751 + 909)]];end elseif ((((7714 -(226 + 1739)) -((1313 -(98 + 120)) + 304))>2198) and (v98<=(6 + 1))) then if ((v98<=(7 -(2 -0))) or (461>=(808 + 1434))) then local v123=0 -0;local v124;local v125;local v126;while true do if ((v123==(1 + 0)) or ((3534 -(786 + 365))==(1855 -(217 + (366 -224))))) then v126=nil;while true do if (((1 -0)==v124) or (((3043 + 340) -(157 + 1203))<=((3656 -1134) -(1874 -(295 + 560))))) then v95[v125 + (2 -1)]=v126;v95[v125]=v126[v97[(8 -5) + 1]];break;end if ((v124==(0 -0)) or ((2788 -(554 + 325))<(1454 + 25))) then local v240=0;while true do if (((18145 -13167)>(4422 -((3583 -1918) + 310))) and (v240==((1231 -(1109 + 120)) -1))) then v124=371 -(253 + 117);break;end if ((((2420 -1684) + (622 -(133 + 206)))==(168 + 178 + 673)) and (v240==0)) then v125=v97[5 -3];v126=v95[v97[3]];v240=3 -2;end end end end break;end if ((v123==0) or ((3024 + 422)==((12586 -(664 + 1110)) -5867))) then v124=0;v125=nil;v123=1 + 0;end end elseif ((v98>6) or ((5350 -3458)>4889)) then if ((1684>=(966 + 138)) and (v97[1 + 1]<v95[v97[4 -0]])) then v76=v76 + 1;else v76=v97[829 -(366 + 460)];end else v95[v97[1 + 1]][v97[2 + 1]]=v95[v97[4]];end elseif ((v98<=(1479 -(23 + 1448))) or ((1092 + 364)<=(646 + 221))) then local v127=0;local v128;local v129;local v130;while true do if ((v127==(2 -1)) or ((1999 -(447 + 1460))>=(2013 -872))) then v130=nil;while true do if ((v128==(2 -1)) or ((3286 + 21)>(3102 + 1567))) then while true do if ((v129==(596 -(325 + 271))) or ((6795 -(2662 + 1649))==(3980 -(37 + (1933 -(168 + 627)))))) then v130=v97[(654 -365) -(263 + 24)];v95[v130]=v95[v130](v13(v95,v130 + 1 + 0 + 0,v97[4 -1]));break;end end break;end if (((1606 -(337 + 143 + 1126))==v128) or ((8286 -5693)>(1580 + 1194))) then v129=0 + 0;v130=nil;v128=1;end end break;end if ((v127==(1643 -(595 + 1048))) or ((5070 -(52 + 305))==2049)) then v128=0 + 0;v129=nil;v127=646 -(36 + 61 + 548);end end elseif ((3459==(9585 -6126)) and (v98>9)) then local v155=856 -(192 + 664);local v156;local v157;local v158;local v159;local v160;while true do if ((3669>2041) and (1==v155)) then v158=nil;v159=nil;v155=1628 -(239 + 1387);end if ((((502 + 16) -141)==(159 + 218)) and (v155==(8 -(2 + 4)))) then v160=nil;while true do if ((0==v156) or (((6035 -3873) -1203)>=(1630 -(7 + 11)))) then local v247=0;while true do if ((v247==0) or ((7112 -(4520 -(319 + 668)))<=3405)) then v157=1158 -(1009 + 149);v158=nil;v247=4 -3;end if ((v247==(1 + 0)) or ((177 + 105)>=((275 -111) + 3385))) then v156=1 + 0 + 0;break;end end end if (((1748 -(491 + 170))==(2909 -1822)) and (v156==((978 -(23 + 954)) + 0))) then local v248=0 + 0;while true do if (((877 + 2271 + 894)>(172 + (3538 -(64 + 566)))) and (0==v248)) then v159=nil;v160=nil;v248=2 -1;end if ((((1 -0) -0)==v248) or (((7514 -2923) -1198)>=(4202 -(266 + 234)))) then v156=2 -0;break;end end end if ((4199<(8776 -(11516 -6954))) and (v156==(1189 -(630 + 557)))) then while true do if ((v157==(1 + 0)) or ((2951 -(12 + 28))>=(4835 + 111))) then v160=0 -0;for v300=v158,v97[11 -7] do local v301=346 -(182 + 164);local v302;while true do if ((1351==(2602 -(600 + 651))) and ((0 -0)==v301)) then v302=0 + 0;while true do if ((v302==(0 + 0)) or ((3502 -(5 + 5))<=(1941 -1016))) then v160=v160 + 1 + (0 -0);v95[v300]=v159[v160];break;end end break;end end end break;end if ((v157==(0 -0)) or ((6697 -(9528 -5320))==(2890 + 1658))) then local v289=0 -0;local v290;while true do if ((v289==(0 + 0)) or ((671 -(123 + 322))>=(3074 -1596))) then v290=469 -(446 + 23);while true do if (((3201 -(15 + 37))==(602 + 2547)) and (v290==(200 -(139 + 61)))) then local v325=1399 -(368 + 1031);while true do if (((1442 -416)>(246 + 71)) and (v325==(1 -0))) then v290=1;break;end if ((v325==(0 + 0)) or ((1019 -306)>(5582 -(124 + 1567)))) then v158=v97[1 + 1 + 0];v159={v95[v158](v13(v95,v158 + (2 -1),v77))};v325=4 -(1289 -(464 + 822));end end end if ((v290==(1 + 0)) or ((2284 -(448 + 1354))<=(2027 -(1131 + (823 -271))))) then v157=1 + 0;break;end end break;end end end end break;end end break;end if (((983 -(55 + 151))==(539 + 238)) and (v155==(0 -0))) then v156=0 + 0;v157=nil;v155=57 -(12 + 44);end end else for v221=v97[2],v97[267 -(215 + 49)] do v95[v221]=nil;end end elseif (((4721 -2943)<(1039 + 2413)) and (v98<=(31 -16))) then if ((v98<=(4 + 8)) or (362>=((2104 + 3603) -(152 + (8525 -6697))))) then if ((v98>11) or ((4333 + 51 + 120)<=(4777 -(127 + (1668 -491))))) then local v131=0 -0;local v132;local v133;local v134;local v135;local v136;while true do if ((4633>=((2202 + 638) -771)) and (v131==(59 -(21 + 36)))) then v136=nil;while true do if (((954 + 773 + 122)<=(1779 + 492)) and (v132==1)) then local v241=0;while true do if (((12867 -(8618 -(460 + 13)))>(280 + 1771)) and (v241==(1 -0))) then v132=3 -1;break;end if (((2410 + 750)<(3599 + 1224)) and (0==v241)) then v77=(v135 + v133) -1;v136=0 -0;v241=1;end end end if (((1159 + 752)<=2839) and (v132==(0 + 0))) then v133=v97[3 -1];v134,v135=v92(v95[v133](v13(v95,v133 + (2 -1),v97[(1 -0) + 2])));v132=1 + 0;end if ((v132==((1399 -(9 + 486)) -(873 + 29))) or ((867 + 3521)<661)) then for v244=v133,v77 do local v245=0 -0;local v246;while true do if (((0 + 0)==v245) or (147>(3694 -1699))) then v246=1791 -(1345 + 446);while true do if ((v246==(0 -0)) or (4130<=811)) then v136=v136 + 1 + 0;v95[v244]=v134[v136];break;end end break;end end end break;end end break;end if (((1029 -(27 + 3))==(2561 -1562)) and (v131==(4 -3))) then v134=nil;v135=nil;v131=2;end if ((v131==0) or ((8001 -4731)==(7161 -3988))) then v132=1722 -(1695 + 27);v133=nil;v131=1 -0;end end elseif (((819 -296)<(1270 + 2950)) and  not v95[v97[1861 -((3170 -(1119 + 813)) + (1364 -743))]]) then v76=v76 + ((1420 -(1212 + 206)) -1);else v76=v97[3];end elseif ((v98<=(27 -14)) or ((5960 -3762)==(2973 -(547 + 419 + 531)))) then v95[v97[2]]();elseif ((v98>(1432 -(1165 + 253))) or (2440==4564)) then v95[v97[8 -6]]=v36[v97[13 -(4 + 6)]];else local v162=0 -0;local v163;local v164;while true do if ((v162==0) or (((6091 -(146 + 126)) -(15 + (2908 -(195 + 891))))==((8939 -(967 + 114)) -5813))) then v163=0 -0;v164=nil;v162=368 -(211 + 156);end if (((101 -(64 + 36))==v162) or ((5224 -(650 + (146 -66)))<=(656 + 1448))) then while true do if (((5257 -((823 -574) + 321))>=((20049 -11110) -5350)) and (v163==((0 -0) -(285 -(8 + 277))))) then v164=v97[2 -0];v95[v164]=v95[v164]();break;end end break;end end end elseif ((v98<=(6 + 12)) or ((2098 -(806 + 538))>3038)) then if (((4032 + 541)>=3669) and (v98<=(76 -(50 + 10)))) then if ((v97[3 -1]==v95[v97[1 + 3]]) or ((13353 -8785)<((1646 -(29 + 59)) + 2640))) then v76=v76 + (2 -1);else v76=v97[6 -(1 + 2)];end elseif (((7111 -3846)>=((4666 -(873 + 909)) + 208)) and (v98==((1121 -792) -(260 + (112 -60))))) then local v165=0 + 0;local v166;local v167;local v168;while true do if (((785 + (69 -55))<=(4671 -(298 + 830))) and (v165==((1 + 2) -2))) then v168=v95[v166] + v167;v95[v166]=v168;v165=2;end if (((5477 -1652)==(5545 -(977 + 743))) and (v165==(3 -1))) then if ((2536>2485) and (v167>(1589 -(854 + 735)))) then if ((v168<=v95[v166 + 1 + 0]) or ((185 + 1632)>=((11925 -6229) -1136))) then local v262=0 -0;local v263;local v264;while true do if (((208 + 91)==(288 + 11)) and ((1 + 0)==v262)) then while true do if (((6070 -(1431 + 425))>=(2512 -(685 + (6531 -5220)))) and (v263==(618 -(80 + 538)))) then v264=0 + 0;while true do if (((1854 + 2139)==(302 + 3691)) and (v264==(1954 -(1798 + 156)))) then v76=v97[4 -1];v95[v166 + 3]=v168;break;end end break;end end break;end if ((v262==0) or ((2530 -(57 + 283))<=(3050 -(53 + 1795)))) then v263=0 -0;v264=nil;v262=1 -0;end end end elseif ((v168>=v95[v166 + ((5337 -4265) -(398 + (1030 -(204 + 153))))]) or ((6659 -1963)<=(3812 -889))) then local v265=0 -0;local v266;while true do if (((0 + 0)==v265) or ((510 + 10)>=(3388 -(252 + 77)))) then v266=1888 -(356 + 1532);while true do if ((((6410 -(423 + 550)) -(600 + 751))>(2381 -1481)) and (v266==(202 -(117 + 85)))) then v76=v97[11 -8];v95[v166 + 3]=v168;break;end end break;end end end break;end if (((0 + 0 + 0)==v165) or (1506<=1381)) then local v230=1161 -(810 + 351);while true do if (((3034 -(883 + 18 + 86 + 662))<(13891 -10334)) and (v230==0)) then v166=v97[1 + 1];v167=v95[v166 + (1811 -(756 + 1053))];v230=1;end if ((v230==(3 -(7 -5))) or (((2489 + 233) -(487 + 271))>=3891)) then v165=1;break;end end end end else local v169=0;local v170;local v171;local v172;local v173;local v174;while true do if ((v169==((1 -0) + 0)) or ((4017 -(640 + 142 + 770))==(851 -226))) then v172=nil;v173=nil;v169=2 + 0;end if ((2885>=(142 + 393)) and (v169==0)) then v170=1719 -(1277 + (1809 -(66 + 1301)));v171=nil;v169=1 + 0;end if ((v169==((1702 -(624 + 433)) -(323 + 320))) or (158>(969 -(211 + 117 + 479)))) then v174=nil;while true do if ((v170==1) or (2533>=2852)) then local v250=1103 -(201 + 902);while true do if (((2177 -(30 + 364))==(765 + 1018)) and (v250==(0 + 0))) then v77=(v173 + v171) -1;v174=0 -0;v250=1;end if ((v250==1) or ((6299 -3262)>(2758 + 318))) then v170=8 -6;break;end end end if (((3664 -(659 + 62))<(8478 -5315)) and (v170==((276 -(43 + 231)) -0))) then for v267=v171,v77 do local v268=204 -(56 + 148);local v269;local v270;while true do if (((8728 -4500)<(4599 -(213 + (1121 -(148 + 852))))) and (v268==((1307 + 209) -(847 + 669)))) then v269=0;v270=nil;v268=1 + 0;end if ((v268==(242 -(114 + 127))) or (1467>(5079 -(546 + 1168)))) then while true do if ((v269==(1442 -((2180 -(1912 + 12)) + (3229 -2043)))) or ((3435 -(257 + 754))<=(1236 + 607))) then v270=381 -(54 + 327);while true do if (((3837 -2686)<=(1947 -(270 + 28))) and (v270==(0 + 0))) then v174=v174 + (1 -0);v95[v267]=v172[v174];break;end end break;end end break;end end end break;end if (((10630 -5857)>=(4590 + 152)) and (v170==0)) then v171=v97[2];v172,v173=v92(v95[v171](v95[v171 + (678 -(132 + 545))]));v170=1;end end break;end end end elseif (((8032 -(4800 + 289))>(438 -297)) and (v98<=(39 -20))) then local v137=0 -0;local v138;local v139;while true do if (((1593 -532)<(3315 -(300 + 322 + 526))) and ((0 -0)==v137)) then v138=0 + 0;v139=nil;v137=(2 -1) + 0;end if (((4062 -2023)>(907 + 1031)) and (v137==(295 -(242 + 52)))) then while true do if ((v138==(0 -0)) or ((1652 + 765)<=(2216 -1272))) then v139=v97[4 -2];v95[v139](v13(v95,v139 + 1,v77));break;end end break;end end elseif ((((20 -(10 + 5)) + 38)<=(1898 -(446 + 942))) and (v98==(15 + 5))) then v95[v97[2 + (0 -0)]]=v97[(5563 -3580) -(255 + 1725)];else local v176=0 -0;local v177;local v178;local v179;local v180;while true do if ((v176==(4 -2)) or (1656==(306 + 3577))) then while true do if ((v177==(0 + (849 -(315 + 534)))) or ((3257 -1796)>(588 + 2634))) then v178=v97[794 -((324 -123) + 591)];v179={v95[v178](v95[v178 + 1])};v177=295 -(172 + 122);end if (((6483 -(389 + 1189))>(3020 + 312)) and (v177==1)) then v180=810 -(769 + 41);for v271=v178,v97[1286 -(24 + (3199 -(581 + 1360)))] do local v272=0 + 0;local v273;local v274;while true do if (((10019 -6514)==(5283 -(1111 + (2956 -2289)))) and (v272==(2 -1))) then while true do if (((1566 + 2775)<(15184 -10624)) and ((0 + 0)==v273)) then v274=974 -(512 + 462);while true do if ((((1194 -716) -257)<=(11408 -7228)) and (v274==(0 -(0 + 0)))) then v180=v180 + 1 + 0;v95[v271]=v179[v180];break;end end break;end end break;end if (((4493 -2830)==(1637 + 26)) and (v272==(0 -0))) then v273=0 -0;v274=nil;v272=2 -1;end end end break;end end break;end if (((230 + 229)==(596 -137)) and ((0 + 0)==v176)) then v177=0;v178=nil;v176=942 -(416 + 525);end if ((v176==(637 -(168 + 468))) or ((105 + 584)>=(891 + 1438))) then v179=nil;v180=nil;v176=1027 -(699 + 326);end end end elseif (((1202 -(513 + 614))<=(481 + 3120)) and (v98<=32)) then if ((v98<=(1313 -(767 + 520))) or ((3964 + 169)==983)) then if ((v98<=(53 -30)) or ((1578 + 1182)<(734 + 590))) then if (((2253 -(619 + 1046))<=(2643 -(12 + 5))) and (v98>22)) then if (((9520 -4548)==(2697 + (3170 -(559 + 336)))) and (v95[v97[2]]==v97[1 + 3])) then v76=v76 + (401 -(375 + 25));else v76=v97[1769 -(270 + 1496)];end else v95[v97[5 -3]]=v95[v97[3]];end elseif ((2704==(2211 + 493)) and (v98<=(9 + 15))) then do return;end elseif ((v98==25) or (((2654 -(165 + 377)) -1580)>=(1670 + 193))) then if (((3464 -(166 + 230))>(4623 -2394)) and v95[v97[301 -(114 + 185)]]) then v76=v76 + 1 + 0;else v76=v97[1839 -(862 + 974)];end else local v181=0;local v182;local v183;local v184;local v185;local v186;while true do if ((((0 -0) + 0)==v181) or (2818>=(537 + 3402))) then v182=519 -(75 + 58 + 386);v183=nil;v181=2 -1;end if ((v181==(1 + (494 -(47 + 447)))) or ((4799 + (1412 -(656 + 715)))<=((3813 -1394) -742))) then v184=nil;v185=nil;v181=6 -4;end if (((132 + 890)<=(5271 -(1243 + 381))) and (v181==(1 + 1))) then v186=nil;while true do if ((v182==(0 -0)) or ((2110 + 1333)>=((488 -166) + 4388))) then local v251=0;while true do if (((3356 -1699)<(3537 -(725 + 601))) and (1==v251)) then v182=1 + 0;break;end if (((5474 -(278 + 502))>=(2852 -((248 -105) + 412))) and (v251==(0 + 0 + 0))) then v183=0 + 0 + 0;v184=nil;v251=1;end end end if ((((5891 -(1440 + 382)) -(869 + 782))==2418) and (v182==(2 -1))) then local v252=0 + 0;while true do if ((v252==(2 -1)) or (1233>=3241)) then v182=5 -3;break;end if ((v252==(0 -(0 -0))) or ((12419 -9001)==(6335 -2545))) then v185=nil;v186=nil;v252=2 -1;end end end if ((v182==(2 + 0)) or ((2543 + 1777)<(4948 -(25 + 629)))) then while true do if (((15711 -10753)>=3016) and (v183==1)) then local v291=0;local v292;while true do if ((v291==(0 -0)) or ((169 + 512)>=(5271 -(46 + 406)))) then v292=1660 -(765 + 895);while true do if ((1780<=(6377 -2838)) and (v292==(1183 -(218 + 964)))) then v183=371 -(365 + 4);break;end if (((1112 -(7 + 4 + 1))>=185) and (v292==(1252 -(794 + (665 -207))))) then local v326=0;while true do if ((v326==(1799 -(792 + 1007))) or (2574<(1709 -(524 + 856)))) then v186={};v185=v10({},{__index=function(v354,v355)local v359=0 + 0;local v360;local v361;while true do if ((2938<=(12444 -7533)) and (v359==((0 + 0) -0))) then v360=0;v361=nil;v359=1;end if (((46 + 903)==((3427 -(582 + 1207)) -((586 -362) + 465))) and ((1207 -(946 + 260))==v359)) then while true do if ((v360==0) or ((860 -(103 + 54))>=1899)) then local v370=219 -(107 + 112);while true do if ((v370==0) or ((1968 + 1641)==(812 -(129 + 168)))) then v361=v186[v355];return v361[24 -(17 + 6)][v361[1 + 1]];end end end end break;end end end,__newindex=function(v356,v357,v358)local v362=0 + 0;local v363;local v364;local v365;while true do if (((5271 -3224)==(2611 -(42 + 522))) and (v362==(1 + 0))) then v365=nil;while true do if ((v363==(0 -(0 -0))) or ((12644 -8996)<=((7624 -4416) -1839))) then local v371=0 -0;while true do if (((14476 -11532)>(2378 -(3544 -2022))) and (0==v371)) then v364=0;v365=nil;v371=1547 -(1354 + 53 + 139);end if (((1140 -517)<=(3867 -(177 + 553))) and (v371==(3 -2))) then v363=1;break;end end end if (((4366 -(560 + 17))>=((3574 -(571 + 396)) -(645 + 280))) and (v363==(1 + 0))) then while true do if (((8136 -3689)==4447) and (v364==(0 + 0))) then v365=v186[v357];v365[1 -0][v365[2]]=v358;break;end end break;end end break;end if ((v362==0) or ((215 + 1602)>=(2791 -(29 + 836)))) then v363=934 -((1015 -615) + (1528 -994));v364=nil;v362=1;end end end});v326=1;end if (((890 -((1529 -1197) + 59))<(5493 -(230 + 1446))) and (v326==(168 -(160 + 7)))) then v292=1 + 0 + 0;break;end end end end break;end end end if ((v183==(1957 -(967 + 990))) or ((2228 + 172)<(1046 -(62 + 527)))) then local v293=0 -0;while true do if ((v293==(0 -0)) or ((4736 -(15 + 192))<3835)) then local v318=996 -(238 + 758);while true do if (((4483 -2880)==(1767 -(4 + 160))) and (v318==(0 + 0))) then v184=v90[v97[9 -6]];v185=nil;v318=1;end if ((v318==(4 -3)) or ((263 -109)>=(258 + 1894))) then v293=1822 -(1654 + 167);break;end end end if ((v293==((1 + 0) -0)) or (187==3894)) then v183=3 -2;break;end end end if ((1671>(1910 -(73 + 232))) and (v183==(2 + 0))) then for v303=1 + 0,v97[4] do local v304=0 -0;local v305;local v306;while true do if (((5528 -(1503 + 114))==(6559 -2648)) and ((0 + 0)==v304)) then local v321=0;while true do if (((40 + 558)<=4284) and (v321==(0 -0))) then v305=1776 -(855 + (2456 -(827 + 708)));v306=nil;v321=1;end if ((v321==(786 -(716 + 69))) or ((1953 -(1755 + 75))>2233)) then v304=1 + 0;break;end end end if ((4655>((1236 -(611 + 282)) + 2849)) and (v304==(1 -0))) then while true do if (((6165 -3328)>=(5197 -3469)) and (v305==(1 + 0))) then if ((v306[1 + 0]==(5 + 17)) or (((202 -129) + 69)==(6418 -3258))) then v186[v303-1]={v95,v306[3]};else v186[v303-(1 + 0)]={v36,v306[1013 -(153 + 6 + 851)]};end v94[ #v94 + 1]=v186;break;end if (((3765 -(222 + 48))==((10952 -4402) -3055)) and (v305==(0 -0))) then local v334=0 -0;local v335;while true do if (((6795 -2323)>((1148 -(307 + 745)) + 299)) and (v334==(0 + 0 + 0))) then v335=0;while true do if ((3922<(10029 -5650)) and ((642 -(285 + 357))==v335)) then v76=v76 + 1 + 0;v306=v88[v76];v335=1 + (798 -(575 + 223));end if (((3096 -(1012 + 465))<(1225 + 748)) and (v335==(1 + 0))) then v305=1 + 0;break;end end break;end end end end break;end end end v95[v97[2]]=v29(v184,v185,v37);break;end end break;end end break;end end end elseif (((616 + 244)<=((4747 + 1057) -3793)) and (v98<=29)) then if ((v98<=27) or ((5582 -(8 + 1088))==(689 + 367))) then do return v95[v97[955 -(421 + 532)]];end elseif (((7158 -5442)>(1666 -1269)) and (v98==28)) then local v187=0;local v188;local v189;local v190;while true do if ((v187==1) or ((4247 -(1161 + 391))==((1150 -(228 + 536)) -105))) then v190=nil;while true do if ((919<(2150 -(289 + 86))) and (v188==((601 -(485 + 113)) -2))) then for v275=1 + 0, #v94 do local v276=0;local v277;local v278;local v279;while true do if ((((2681 -(726 + 1093)) + 2218)>=(3787 -(254 + 1676))) and (v276==(1 + 0))) then v279=nil;while true do if ((v277==(1 -0)) or ((6887 -4182)<=(2285 -(1807 + 108)))) then while true do if ((v278==(0 -0)) or ((3804 -2089)>=(6749 -3574))) then v279=v94[v275];for v339=0 + 0, #v279 do local v340=347 -(201 + 146);local v341;local v342;local v343;local v344;local v345;while true do if ((1329<=(3516 -(435 + 82))) and (v340==(5 -3))) then v345=nil;while true do if ((852<=(2157 + 1516)) and (v341==(2 -0))) then while true do if ((v342==(502 -(430 + 71))) or ((7386 -(4675 -(312 + 734)))<=((3099 -(1052 + 341)) + 159))) then v345=v343[4 -2];if ((2666<=(5334 -(559 + 4))) and (v344==v95) and (v345>=v189)) then local v378=0;local v379;while true do if (((2842 + 466)<(7635 -(5889 -(1127 + 828)))) and ((0 + 0)==v378)) then v379=0 + 0;while true do if ((952<=(9633 -4818)) and (v379==(0 + 0))) then v190[v345]=v344[v345];v343[2 -1]=v190;break;end end break;end end end break;end if ((4433>(1874 -936)) and (v342==(1561 -(846 + 715)))) then local v372=0 -0;local v373;while true do if (((150 + 160)<4304) and (v372==(996 -(377 + 619)))) then v373=1135 -(1045 + 90);while true do if ((v373==1) or (((384 + 1401) -891)==3319)) then v342=1439 -(415 + 1023);break;end if ((v373==(1863 -(1547 + 316))) or ((4590 -785)<993)) then local v382=0 -0;while true do if ((v382==(0 + 0)) or ((498 + 268)<=(843 -478))) then v343=v279[v339];v344=v343[1];v382=1 -0;end if ((v382==(1550 -(545 + 1004))) or ((2605 + 1661)<(151 + 380))) then v373=1 + 0;break;end end end end break;end end end end break;end if (((2759 -1807)==(2262 -(629 + 681))) and ((0 + 0)==v341)) then local v366=0;while true do if ((v366==(1 -0)) or ((1344 -890)>=((1056 + 203) -(331 + 240)))) then v341=1;break;end if (((11867 -9443)<=(5059 -(1405 + 284))) and (v366==(0 + 0))) then v342=1942 -(647 + 1295);v343=nil;v366=1;end end end if (((780 + 293)<=4170) and (v341==1)) then local v367=(1819 -(355 + 316)) -(829 + 319);while true do if ((v367==0) or (((3902 + 80) -973)==(20021 -15994))) then v344=nil;v345=nil;v367=1 + 0;end if (((1472 -726)<(3857 -(348 + 756))) and ((4 -3)==v367)) then v341=2;break;end end end end break;end if ((v340==0) or ((927 -(418 + (97 -51)))==1662)) then v341=1942 -(1678 + 264);v342=nil;v340=3 -(5 -3);end if (((3159 -1957)==1202) and (v340==(1 + 0))) then v343=nil;v344=nil;v340=2;end end end break;end end break;end if (((1094 -(401 + 693))==v277) or ((1952 + 2414)<=((3293 + 293) -(618 + 1290)))) then local v322=0 -0;while true do if (((4439 -((324 -101) + 482))<=(13147 -8687)) and (v322==(0 + 0))) then v278=0 + 0;v279=nil;v322=1 + 0;end if ((v322==1) or ((3732 -1402)>(872 + 3464))) then v277=2 -1;break;end end end end break;end if (((3591 -(1199 + 176))>=(1836 -(246 + 734))) and (v276==(0 + 0))) then v277=(0 + 0) -(209 -(147 + 62));v278=nil;v276=(1356 -433) -(361 + (741 -180));end end end break;end if (((5867 -(183 + 1658))>(373 + 599)) and (v188==((1186 -(13 + 1173)) + 0))) then v189=v97[2 -0];v190={};v188=1;end end break;end if (((5114 -3147)<=(20728 -(17700 -(243 + 1269)))) and (v187==(0 -0))) then v188=0;v189=nil;v187=1 + 0;end end else v95[v97[1 + 1]]=v29(v90[v97[3]],nil,v37);end elseif (((4739 -(1145 + 481))>375) and (v98<=30)) then v95[v97[3 -1]]=v95[v97[13 -10]] -v95[v97[1485 -(560 + 921)]];elseif ((v98>(441 -(241 + 169))) or ((6928 -(430 + 1508))==(9788 -5351))) then v95[v97[(260 -(110 + 147)) -1]]=v97[8 -5]~=0;elseif ((v95[v97[836 -(381 + 453)]]<v97[1 + 3]) or ((1835 -(542 + 358))<(2348 -(1521 + 37 + 95)))) then v76=v76 + 1;else v76=v97[967 -(317 + 647)];end elseif ((3920>=(5959 -3362)) and (v98<=(73 -35))) then if ((v98<=(55 -20)) or ((2324 + 292)<(32 + 271 + (655 -(46 + 79))))) then if ((1093==(2304 -1211)) and (v98<=((1211 + 539) -(776 + 941)))) then local v142=31 -(13 + 18);local v143;local v144;local v145;local v146;local v147;local v148;while true do if ((v142==(0 + 0)) or ((4248 -(976 + 51))==(1009 + 1047))) then v143=0 -0;v144=nil;v142=(2 -1) + 0 + 0;end if (((5336 -(1014 + 255))<=(8835 -4473)) and (v142==1)) then v145=nil;v146=nil;v142=5 -3;end if ((1502<4439) and (v142==(1657 -(439 + 1216)))) then v147=nil;v148=nil;v142=(8 + 0) -5;end if ((3==v142) or (1016>=(4446 -(1618 + 137)))) then while true do if (((1298 -(973 + (968 -645)))==v143) or ((9152 -4576)<2119)) then local v242=402 -(342 + 55 + 5);while true do if ((4462>(3038 + 180)) and (v242==(0 + 0))) then for v287=1,v145 do v95[v146 + v287]=v147[v287];end v148=v147[1];v242=634 -(364 + 269);end if ((v242==1) or (3588>=(2603 + 1063))) then v143=(2651 -(1287 + 142)) -(436 + 783);break;end end end if ((v143==(2 -1)) or (557>1047)) then v146=v144 + 2;v147={v95[v144](v95[v144 + 1 + 0],v95[v146])};v143=1 + 1;end if (((5404 -3473)<3657) and (v143==((4269 -2439) -(191 + 1636)))) then if (v148 or ((2629 -1441)>((12605 -7103) -(888 + (1588 -(1370 + 109)))))) then local v253=0 + 0;local v254;local v255;while true do if ((((0 + 0) -0)==v253) or ((1772 -(160 + 1327))==((1176 + 4665) -2082))) then v254=0 -0;v255=nil;v253=606 -(517 + 88);end if (((5214 -(1219 + 22))>(1858 + 1215)) and (v253==(344 -(105 + 238)))) then while true do if (((4382 -(966 + 940))>=(2987 -(141 + 1603))) and ((0 -0)==v254)) then v255=0 -0;while true do if (((2813 -(687 + 3))>(2252 -834)) and ((0 + 0)==v255)) then v95[v146]=v148;v76=v97[6 -3];break;end end break;end end break;end end else v76=v76 + 1;end break;end if ((v143==0) or ((220 + 2494)<=2395)) then local v243=(2523 -1520) -(603 + 12 + 388);while true do if ((1448>109) and (v243==(0 + 0 + 0))) then v144=v97[2];v145=v97[6 -2];v243=99 -(95 + 3);end if (((2095 -(41 + 45))<(1402 + 626)) and ((1 + 0)==v243)) then v143=1;break;end end end end break;end end elseif (((563 + (2224 -(40 + 980)))<(5623 -(1040 + 37))) and (v98>(78 -44))) then local v193=0 -0;local v194;local v195;while true do if ((((2859 + 2379) -(481 + 214))==((10066 -7896) + 2373)) and (v193==0)) then v194=0;v195=nil;v193=1;end if (((3105 -(2629 -(219 + 306)))==(2981 -(1438 + 542))) and (v193==(1 + 0))) then while true do if (((1557 -674)<(1973 -(41 + 74))) and (v194==(0 -0))) then v195=v97[5 -3];v95[v195](v95[v195 + (1415 -(896 + 518))]);break;end end break;end end else local v196=(237 + 1619) -(235 + 1621);local v197;local v198;local v199;local v200;while true do if (((1453 + 1329 + 127)<(4315 -(855 + 366))) and (v196==2)) then while true do if (((2835 + 1658)<4678) and (v197==0)) then local v256=0 -0;while true do if ((v256==(0 -0)) or ((2856 -(342 + 560))>=2392)) then v198=403 -(264 + 139);v199=nil;v256=1 + 0;end if ((v256==1) or (779>(4888 -(1206 + 124)))) then v197=1863 -(1371 + 491);break;end end end if (((408 + (5290 -3076))<=(629 + 2961)) and (v197==(1 + 0))) then v200=nil;while true do if ((v198==(1512 -((904 -646) + 1253))) or (((412 + 630) -782)>=(4167 -(1325 + 564)))) then for v307=v199 + 1,v97[4] do v200=v200   .. v95[v307];end v95[v97[2 -(0 -0)]]=v200;break;end if ((v198==(0 + 0)) or ((1155 -(618 + 42 + 63))>(9085 -4319))) then local v296=1292 -((1297 -(586 + 639)) + 1220);local v297;while true do if ((v296==(0 -0)) or ((6351 -(1365 + 315))<(1189 + 1482))) then v297=1370 -(649 + 721);while true do if ((0==v297) or (393<=(1956 -(1118 + 725)))) then local v328=0 + 0;while true do if ((v328==0) or ((3714 -(813 + 228))<((13231 -3920) -6824))) then v199=v97[1824 -(662 + 1159)];v200=v95[v199];v328=1 + 0;end if (((6023 -(524 + 515))>=(703 -214)) and (v328==1)) then v297=1 + 0;break;end end end if ((v297==(1 + 0)) or ((90 + 264)>2834)) then v198=1 + 0;break;end end break;end end end end break;end end break;end if (((12812 -8389)==(2098 + 2325)) and (v196==((2 -1) -0))) then v199=nil;v200=nil;v196=8 -6;end if (((1503 + 2685)>4021) and (v196==(1868 -(551 + 1317)))) then v197=1692 -(1594 + 98);v198=nil;v196=1 + 0;end end end elseif ((v98<=(137 -(78 + 23))) or (2016>((5316 -1456) -(116 + 922)))) then v95[v97[1143 -(26 + 1115)]]=v95[v97[5 -2]] + v97[10 -6];elseif (((4727 -(440 + 648))>=(6119 -3416)) and (v98>(1108 -(232 + 839)))) then if (((3101 + (1111 -(445 + 360)))==(4830 -(107 + (4648 -3332)))) and (v97[2]<=v95[v97[4]])) then v76=v76 + (2 -1);else v76=v97[3];end elseif ((2819<(1021 + 2497)) and (v95[v97[6 -4]]~=v97[8 -4])) then v76=v76 + 1 + 0;else v76=v97[1958 -(1011 + 944)];end elseif ((803<(4725 -3224)) and (v98<=41)) then if ((v98<=((97 + 93) -151)) or (4811<(662 + 287))) then v95[v97[(178 -(136 + 41)) + 1]][v97[(1928 -(1244 + 135)) -(378 + (547 -(195 + 184)))]]=v97[45 -(15 + 26)];elseif (((6831 -5020)<=(1973 + 765)) and (v98>(14 + 26))) then local v201=0;local v202;local v203;local v204;local v205;local v206;while true do if (((953 -(547 + 144 + 262))==v201) or ((12276 -7504)<(1799 -431))) then v202=0;v203=nil;v201=1;end if ((v201==(883 -(650 + 232))) or ((5344 -(484 + 398))>(1543 + 2938))) then v204=nil;v205=nil;v201=5 -(6 -3);end if (((4563 -3495)<=(228 + 3145)) and (v201==((1270 -(889 + 118)) -(91 + 170)))) then v206=nil;while true do if (((2173 -(1482 + 149))<(602 + 3039)) and (v202==2)) then while true do if ((v203==(1 -0)) or ((3335 -(18 + (1457 -(368 + 424))))==2588)) then v206=v95[v204 + (3 -1)];if ((v206>(0 -0)) or ((3927 -1682)>(3774 -(126 + 297)))) then if ((v205>v95[v204 + (933 -(748 + 184))]) or ((5506 -(1213 + 421))>(1585 + 2674))) then v76=v97[59 -((22 -12) + (777 -(197 + 534)))];else v95[v204 + 2 + 1]=v205;end elseif (((47 + 534)<=(933 -344)) and (v205<v95[v204 + (1811 -(24 + 1786))])) then v76=v97[2 + 1];else v95[v204 + 3]=v205;end break;end if (((3361 -(682 + 363))<(3077 + 366)) and (v203==(1343 -(979 + 364)))) then local v298=0;while true do if (((7792 -5088)<(460 + 3542)) and (v298==1)) then v203=1 + 0;break;end if (((1799 -((278 -167) + 90))==(5294 -3696)) and (v298==(0 -0))) then local v319=0 -0;while true do if (((13373 -9021)>=2380) and (v319==(2 -1))) then v298=1;break;end if ((3831<(15194 -10336)) and ((0 -0)==v319)) then v204=v97[(850 -(336 + 512)) + 0];v205=v95[v204];v319=1 + 0;end end end end end end break;end if ((v202==1) or ((1955 -(891 + 156))>=(2444 + 1962))) then local v257=0 -(0 + 0);while true do if ((1109==(467 + 642)) and (v257==((2559 -(167 + 1665)) -(40 + 686)))) then v202=2 + 0;break;end if ((v257==(1298 -(891 + 407))) or ((718 + 3611)<=(1133 -719))) then v205=nil;v206=nil;v257=1 + 0;end end end if ((v202==((2364 -1846) -(240 + 278))) or ((2074 + 119 + 564)==(329 + 99))) then v203=0 -0;v204=nil;v202=1;end end break;end end else v36[v97[1716 -(1122 + 591)]]=v95[v97[1125 -(865 + 258)]];end elseif (((4031 + 524)<=(17202 -12630)) and (v98<=(65 -23))) then v95[v97[1508 -(542 + 964)]]=v37[v97[10 -7]];elseif ((2466<(1251 + 3696)) and (v98>((222 -154) -25))) then local v208=0 + 0;local v209;local v210;local v211;while true do if ((v208==(0 -0)) or ((510 + 1741)<=(27 -13))) then v209=0 -0;v210=nil;v208=1;end if ((v208==(1 + 0 + 0)) or ((1008 + 3396)>=(6604 -(33 + 1815)))) then v211=nil;while true do if ((v209==((3573 -(1607 + 220)) -(1484 + 262))) or (((6160 -(1716 + 141)) -2192)>=(5135 -(5 + 28 + 261)))) then local v258=(638 -(73 + 565)) -0;while true do if ((v258==(2 -1)) or ((5688 -(355 + 954))==(993 + 2901))) then v209=1;break;end if (((682 + 1106)<=2290) and (v258==(0 + 0))) then v210=0 -0;v211=nil;v258=1353 -(1191 + 161);end end end if (((10145 -5808)>(292 + 98)) and (v209==(621 -(376 + 244)))) then while true do if (((0 -0)==v210) or ((1382 -(21 + 61))==(3819 -(36 + 103)))) then v211=v97[9 -7];v95[v211]=v95[v211](v95[v211 + (1027 -(491 + 535))]);break;end end break;end end break;end end else local v212=0 + (0 -0);local v213;local v214;local v215;local v216;local v217;while true do if ((1705>(905 -290)) and (v212==(1560 -(1398 + 160)))) then v217=nil;while true do if ((v213==(2 + 0 + 0)) or ((6804 -3324)<(2773 + 559))) then for v280=v214,v77 do local v281=0 -(0 -0);local v282;local v283;while true do if ((v281==1) or ((2320 -(53 + 152))>=(6594 -3622))) then while true do if (((14603 -(10619 -(120 + 762)))==(7565 -2699)) and (v282==(0 -0))) then v283=0 -0;while true do if (((10443 -5751)<(5681 -(774 + 107))) and (v283==(0 + 0))) then v217=v217 + 1 + 0;v95[v280]=v215[v217];break;end end break;end end break;end if ((v281==(0 -(1663 -(796 + 867)))) or ((2866 + (2200 -(279 + 104)))<1839)) then v282=0 + 0;v283=nil;v281=1 + 0;end end end break;end if ((v213==(0 -0)) or (4982<(2646 -(729 + 173)))) then local v259=10 -(6 + 4);while true do if (((4072 -(470 + 639))<=(9709 -6254)) and (v259==(1629 -(1259 + 369)))) then v213=(3499 -2091) -(179 + 1228);break;end if ((v259==(0 + 0)) or ((10283 -5845)<623)) then v214=v97[1589 -(215 + 1372)];v215,v216=v92(v95[v214]());v259=1 + 0;end end end if ((v213==(2 -1)) or ((3343 -((974 -473) + 309))>=(3994 + 91))) then local v260=0 + 0;while true do if (((279 + 75)<=(1320 -(99 + 257))) and (v260==(1 + 0))) then v213=2;break;end if ((v260==(0 -0)) or ((26 + 565)==(5166 -(37 + 1110)))) then v77=(v216 + v214) -((5503 -4311) -(1135 + 56));v217=(0 -0) + (0 -0);v260=1 + 0;end end end end break;end if ((2921==(12284 -9363)) and (v212==(1 + 0))) then v215=nil;v216=nil;v212=2 + 0;end if (((10420 -6948)>=2439) and (v212==0)) then v213=0 -0;v214=nil;v212=1 + 0;end end end v76=v76 + 1 + 0;break;end if ((v100==(998 -(444 + 554))) or ((2302 + 2166)>(6483 -(698 + 1271)))) then local v103=226 -(6 + 220);while true do if ((((6930 -(1431 + 134)) -3586)<(4527 -(230 + 255))) and (v103==(1 + 0))) then v100=1 + 0 + 0;break;end if (((725 -557)<=(4653 -(62 + 1053))) and (v103==0)) then v97=v88[v76];v98=v97[965 -(642 + 322)];v103=1 -0;end end end end end end v75=3;end end end;end if (v63==0) then v64=v35[1];v65=v35[2];v63=1;end end end return v29(v28(),{},v17)();end v0=4;end if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then vv9());break;end end end
