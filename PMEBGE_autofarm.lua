-- hi wiggly wiggles why dont you try making better patches? :P
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then function v15(v16,v17)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then local v65=0;while true do if (v65==0) then v19=v1(v4(v30,1,1));return "";end end else local v66=v3(v1(v30,16));if v19 then local v75=0;local v76;while true do if (v75==0) then v76=v6(v66,v19);v19=nil;v75=1;end if (1==v75) then return v76;end end else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=(v31/((9 -7)^(v32-(367 -(116 + 250)))))%(((3786 -(541 + 1330)) -(801 + 1112))^(((v33-(1 + 0)) -(v32-((65 + 373) -(361 + 40 + 36)))) + (2 -1)));return v67-(v67%(1 -0));else local v68=((1443 + 143) -((1792 -(871 + 159)) + 822))^(v32-(420 -(317 + 102)));return (((v31%(v68 + v68))>=v68) and (1 + 0 + 0)) or 0;end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39=0 + 0;local v40;local v41;while true do if (v39==(0 + 0)) then v40,v41=v2(v16,v18,v18 + (4 -(1759 -(835 + 922))));v18=v18 + ((661 -(119 + 538)) -(570 -(179 + 389)));v39=1827 -(1413 + 413);end if (v39==(1 + 0)) then return (v41 * 256) + v40;end end end local function v23()local v42,v43,v44,v45=v2(v16,v18,v18 + (7 -4));v18=v18 + (12 -8);return (v45 * (629307 + 16147909)) + (v44 * 65536) + (v43 * (1148 -((938 -474) + 428))) + v42;end local function v24()local v46=v23();local v47=v23();return (( -(1 + 1 + 0) * v20(v47,32)) + 1) * ((267 -(92 + 173))^(v20(v47,18 + 3 + 0,1274 -(842 + 401)) -(1336 -313))) * ((((v20(v47,536 -(214 + (1912 -(579 + 1012))),9 + 11) * ((125 -(65 + 58))^(664 -(32 + 600)))) + v46)/((1320 -(521 + 797))^(132 -80))) + 1);end local function v25(v34)local v48;if  not v34 then v34=v23();if (v34==(590 -(308 + 282))) then return "";end end v48=v4(v16,v18,(v18 + v34) -(2 -1));v18=v18 + v34;local v49={};for v63=1 + 0, #v48 do v49[v63]=v3(v2(v4(v48,v63,v63)));end return v7(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v50~=2) then else v55=nil;v56=nil;v50=3;end if (v50~=(7 -4)) then else v57=nil;v58=nil;v50=4;end if (v50~=1) then else v53=nil;v54=nil;v50=2;end if (v50==(0 -0)) then v51=0 -0;v52=nil;v50=882 -(748 + 133);end if (v50~=4) then else v59=nil;while true do if (v51~=(9 -7)) then else local v77=0 + 0;while true do if ((74 -(65 + 8))==v77) then v51=1 + 2;break;end if (0~=v77) then else v56=nil;v57=nil;v77=1 -0;end end end if (v51~=3) then else v58=nil;v59=nil;v51=4;end if ((1 + 0)==v51) then local v78=0;while true do if (v78==0) then v54=nil;v55=nil;v78=1;end if (v78==(1 + 0)) then v51=3 -1;break;end end end if ((92 -(14 + 78))~=v51) then else local v79=0;while true do if (v79~=(2 -1)) then else v51=569 -(376 + 192);break;end if (0~=v79) then else v52=1437 -(1330 + 107);v53=nil;v79=1 + 0;end end end if (v51==4) then while true do if (v52==(0 + 0)) then v53=0 -0;v54=nil;v52=2 -1;end if (v52==(135 -(8 + 124))) then v59=nil;while true do local v97=0 + 0;local v98;local v99;while true do if (v97==0) then v98=0;v99=nil;v97=1;end if (v97==1) then while true do if (0==v98) then v99=0 -0;while true do if (v99==(1 -0)) then if (v53==1) then local v105=0 + 0;local v106;while true do if (v105==(213 -(98 + 115))) then v106=740 -(259 + 481);while true do if (v106==0) then local v216=0;while true do if (v216==(3 -2)) then v106=1;break;end if (v216~=(0 -0)) then else v57={v54,v55,nil,v56};v58=v23();v216=1 + 0;end end end if (v106==1) then v59={};v53=6 -4;break;end end break;end end end if (v53==3) then local v107=0;local v108;while true do if (v107==0) then v108=0;while true do local v148=0;local v149;while true do if (v148==0) then v149=0;while true do if (v149==(0 -0)) then if (1==v108) then return v57;end if (v108==(0 + 0)) then local v270=0;local v271;while true do if (v270==0) then v271=0 + 0;while true do if (v271==(0 -0)) then local v323=936 -(885 + 51);while true do if (v323==1) then v271=2 -1;break;end if (v323==(0 -0)) then for v339=1718 -(979 + 738),v23() do v55[v339-(1324 -(1048 + 275))]=v28();end for v341=1,v23() do v56[v341]=v23();end v323=321 -(5 + 315);end end end if (v271==(1 + 0)) then v108=1;break;end end break;end end end break;end end break;end end end break;end end end break;end if (v99==(0 -0)) then local v104=0 -0;while true do if (v104==(2 -1)) then v99=1;break;end if (v104~=0) then else if (2==v53) then local v109=0;local v110;while true do if (v109==(0 -0)) then v110=0;while true do if (v110~=(1800 -(1316 + 484))) then else local v222=0;local v223;while true do if (v222==0) then v223=0 -0;while true do if (v223==(1678 -(402 + 1275))) then v110=1;break;end if (v223==0) then for v312=677 -(348 + 328),v58 do local v313=0;local v314;local v315;local v316;local v317;while true do if ((0 -0)==v313) then v314=0 + 0;v315=nil;v313=599 -(560 + 38);end if (v313==2) then while true do if (v314==(0 -0)) then local v343=0;while true do if (v343==(1559 -(1193 + 366))) then v315=0;v316=nil;v343=2 -1;end if (v343==1) then v314=1;break;end end end if (v314==(1 + 0)) then v317=nil;while true do if (v315~=0) then else local v360=0;local v361;while true do if (v360==(0 -0)) then v361=230 -(201 + 29);while true do if (0~=v361) then else local v369=0;while true do if ((1631 -(183 + 1447))==v369) then v361=1737 -(476 + 1260);break;end if (0~=v369) then else v316=v21();v317=nil;v369=1 -0;end end end if (v361==1) then v315=1;break;end end break;end end end if (v315~=(3 -2)) then else if (v316==(1 + 0)) then v317=v21()~=0;elseif (v316==(2 + 0)) then v317=v24();elseif (v316~=(109 -(10 + 96))) then else v317=v25();end v59[v312]=v317;break;end end break;end end break;end if (v313==1) then v316=nil;v317=nil;v313=1791 -(277 + 1512);end end end v57[3]=v21();v223=1;end end break;end end end if (1~=v110) then else for v236=1 + 0,v23() do local v237=0;local v238;local v239;while true do if (v237==1) then while true do if ((0 + 0)==v238) then v239=v21();if (v20(v239,1,1)~=(1296 -(313 + 983))) then else local v324=0;local v325;local v326;local v327;local v328;while true do if (v324==(1656 -(1405 + 250))) then v327=nil;v328=nil;v324=2;end if (v324~=(2 + 0)) then else while true do if (v325==3) then if (v20(v327,12 -9,3)==(2 -1)) then v328[4]=v59[v328[4]];end v54[v236]=v328;break;end if ((0 -0)==v325) then local v354=0;while true do if (v354~=(0 + 0)) then else v326=v20(v239,2,2 + 1);v327=v20(v239,10 -6,1083 -(575 + 502));v354=1 + 0;end if (1==v354) then v325=1 + 0;break;end end end if (v325~=(2 + 0)) then else local v355=0 -0;local v356;while true do if (v355~=(751 -(10 + 741))) then else v356=87 -(27 + 60);while true do if (v356~=0) then else local v367=0 + 0;while true do if (v367==(1 + 0)) then v356=1 + 0;break;end if (v367==0) then if (v20(v327,539 -(25 + 513),760 -(543 + 216))~=(1 + 0)) then else v328[3 -1]=v59[v328[2]];end if (v20(v327,1 + 1,1112 -(837 + 273))==(1 + 0)) then v328[3 + 0]=v59[v328[3]];end v367=1018 -(948 + 69);end end end if (v356~=(1 -0)) then else v325=2 + 1;break;end end break;end end end if (v325==(1 + 0)) then local v357=0;local v358;while true do if (v357~=0) then else v358=0;while true do if (v358~=0) then else local v368=782 -(299 + 483);while true do if (0==v368) then v328={v22(),v22(),nil,nil};if (v326==(0 -0)) then local v376=0;local v377;while true do if (v376~=(1719 -(1033 + 686))) then else v377=1508 -(451 + 1057);while true do if (v377~=(1981 -(1290 + 691))) then else v328[3]=v22();v328[4]=v22();break;end end break;end end elseif (v326==1) then v328[3]=v23();elseif (v326==2) then v328[3]=v23() -(2^16);elseif (v326~=(3 + 0)) then else local v385=0 + 0;local v386;while true do if (v385==(0 -0)) then v386=0;while true do if (v386==(0 + 0)) then v328[3]=v23() -((2 + 0)^16);v328[1774 -(1497 + 273)]=v22();break;end end break;end end end v368=1;end if ((1 + 0)==v368) then v358=1;break;end end end if (v358~=1) then else v325=1025 -(227 + 796);break;end end break;end end end end break;end if (v324==0) then v325=0;v326=nil;v324=555 -(39 + 515);end end end break;end end break;end if (v237==0) then v238=0;v239=nil;v237=1 + 0;end end end v53=815 -(185 + 627);break;end end break;end end end if (v53==0) then local v111=0;local v112;local v113;while true do if (v111~=(1 + 0)) then else while true do if (0==v112) then v113=0 -0;while true do if (v113~=0) then else local v272=933 -(484 + 449);while true do if (v272==(0 + 0)) then local v303=0 + 0;while true do if (v303==(1715 -(1020 + 695))) then v54={};v55={};v303=1;end if ((4 -3)~=v303) then else v272=1411 -(1199 + 211);break;end end end if (v272==1) then v113=1;break;end end end if (v113~=1) then else v56={};v53=1;break;end end break;end end break;end if (v111~=0) then else v112=0 -0;v113=nil;v111=1;end end end v104=2 -1;end end end end break;end end break;end end end break;end if (v52==(1 + 0)) then local v96=0 -0;while true do if (v96~=1) then else v52=1919 -(1096 + 821);break;end if (v96==0) then local v102=0;while true do if ((1956 -(242 + 1714))==v102) then v55=nil;v56=nil;v102=1 + 0;end if (v102~=1) then else v96=1;break;end end end end end if (v52~=2) then else v57=nil;v58=nil;v52=3;end end break;end end break;end end end local function v29(v35,v36,v37)local v60=v35[1];local v61=v35[2];local v62=v35[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==2) then v74=nil;function v74()local v80=v60;local v81=Const;local v82=v61;local v83=v62;local v84=v27;local v85={};local v86={};local v87={};for v93=459 -(413 + 46),v73 do if (((2998 + 831)<((6630 -(79 + 4)) -2524)) and (v93>=v83)) then v85[v93-v83]=v72[v93 + 1 + 0];else v87[v93]=v72[v93 + (1887 -(1817 + 69))];end end local v88=(v73-v83) + (1647 -(902 + 744));local v89;local v90;while true do local v94=0 -0;local v95;while true do if ((v94==(0 -(0 + 0))) or (4235<=(249 -163))) then v95=0 -0;while true do if ((v95==(1362 -(1038 + 324))) or (1534>=(5155 -(682 + 495)))) then local v103=0;while true do if (((39 + 270)<=(3110 -950)) and (v103==(1 + 0))) then v95=694 -((872 -653) + 474);break;end if (((95 + 4249)>(2491 -(674 + 545))) and (v103==(206 -(96 + 110)))) then v89=v80[v70];v90=v89[1 + 0];v103=702 -(455 + 246);end end end if ((4782>=230) and (v95==1)) then if (((2906 -1755)<=(1971 -(385 + 27))) and (v90<=(17 + 4))) then if ((v90<=(950 -(900 + 40))) or ((2994 + 1047)==(1711 + 2251))) then if ((v90<=(4 + 0)) or ((3248 -1549)>(10402 -5702))) then if (((6187 -(279 + 1268))>(5868 -(15094 -11297))) and (v90<=(217 -(104 + 112)))) then if ((v90>(0 -0)) or ((4476 -(418 + 426))==1489)) then do return v87[v89[153 -(34 + 117)]];end else local v114=0 -0;local v115;local v116;local v117;local v118;while true do if (((6002 -(72 + 4676))==(2975 -(1516 + 205))) and ((291 -(267 + 22))==v114)) then while true do if ((v115==(1 + 0)) or ((3008 -(346 + 1552))==((11086 -7873) + 578))) then v118=0;for v240=v116,v89[939 -(791 + 144)] do local v241=0 -0;local v242;while true do if (((2030 + (8775 -6533))>=(2032 -778)) and (v241==(0 + 0))) then v242=1318 -(43 + 1275);while true do if (((4731 -(1111 + 217))<=(3713 + 1088)) and (v242==(1377 -(487 + 890)))) then v118=v118 + (1 -0);v87[v240]=v117[v118];break;end end break;end end end break;end if ((v115==(1653 -(1504 + 149))) or ((638 + 718)>(8827 -5557))) then local v224=0 -0;while true do if ((v224==(1 + 0)) or ((17009 -12425)<=2759)) then v115=4 -3;break;end if ((v224==(0 -0)) or ((6654 -(870 + 824))==(1808 -((1893 -(1125 + 415)) + 144)))) then v116=v89[2 + 0 + 0];v117={v87[v116](v87[v116 + 1 + 0])};v224=(8 -4) -3;end end end end break;end if (((1906 -(421 + 1485))==v114) or ((2635 + 693)<(1332 -(1128 + 137 + 18)))) then v115=0;v116=nil;v114=(901 -(213 + 685)) -2;end if (((1 + 0)==v114) or (1790<(1382 -699))) then v117=nil;v118=nil;v114=8 -6;end end end elseif ((v90<=(9 -7)) or ((770 + 2104)>(5040 -(1102 + (1329 -440))))) then if ((1790<=4134) and (v87[v89[2]]==v89[10 -6])) then v70=v70 + (3 -2);else v70=v89[(1473 -(1445 + 23)) -2];end elseif ((v90>(10 -(1736 -(82 + 1647)))) or ((1039 + 710)>=(1412 + 3211))) then local v152=1917 -(933 + 984);local v153;local v154;while true do if (((4373 -(409 + 796))>((7654 -(226 + 1469)) -(2629 + 1136))) and (v152==(995 -(750 + 245)))) then v153=0 -0;v154=nil;v152=1;end if ((v152==(3 -2)) or (2379>=(1283 + 2162))) then while true do if ((v153==(0 + 0)) or ((14 + 155)>(1767 -(778 + 674)))) then v154=v89[1 + 1];v87[v154]=v87[v154](v13(v87,v154 + (604 -(127 + 476)),v89[2 + 1]));break;end end break;end end else do return;end end elseif ((v90<=(5 + (1870 -(1761 + 107)))) or ((3448 + 650)>(7580 -3344))) then if (((7128 -2743)>(178 -105)) and (v90<=(3 + 2))) then if (((611 + 2095 + 540)<=((8864 -6420) + 1248)) and v87[v89[7 -(17 -12)]]) then v70=v70 + 1 + 0;else v70=v89[3 + 0];end elseif (((4667 -(1144 + 607))<=(343 + 2652)) and (v90==(2 + 4))) then v87[v89[2 + 0]]=v36[v89[3 + 0]];elseif ((v89[1 + 1]<=v87[v89[4]]) or ((3271 -(955 + 360))>=(8499 -3639))) then v70=v70 + (1 -0);else v70=v89[9 -6];end elseif (((14642 -10374)>(2440 + 924)) and (v90<=8)) then v87[v89[1589 -(1566 + 21)]]();elseif ((v90>(1301 -(264 + 1028))) or ((10158 -5654)<=(4938 -(845 + 524)))) then local v156=1345 -(423 + 120 + 802);local v157;local v158;while true do if (((10450 -6749)>=(13 + 1008)) and (v156==(1314 -(1193 + 121)))) then v157=0 -0;v158=nil;v156=1797 -(190 + 1606);end if ((4010>(1201 -(926 + 271))) and (v156==(3 -2))) then while true do if ((v157==0) or ((1312 -(152 + 123))<=(104 + 413))) then v158=v89[4 -(737 -(497 + 238))];v87[v158](v87[v158 + 1 + 0]);break;end end break;end end else local v159=0;local v160;local v161;local v162;while true do if ((4451>=427) and (v159==((1670 -(265 + 1404)) + 0))) then v162=nil;while true do if (((0 -0)==v160) or ((553 + 1697)>=(8557 -5798))) then local v252=(0 + 0) -0;while true do if ((v252==1) or ((3320 -(199 + 459))<=(316 + 1276))) then v160=2 -1;break;end if ((1147<=(293 + 2267)) and (v252==((0 -0) + 0))) then v161=0;v162=nil;v252=1286 -(594 + (1122 -(276 + 155)));end end end if (((3094 -(710 + 115))>(66 + 153)) and (v160==(1 + (331 -(65 + 266))))) then while true do if (((7352 -4892)>(6169 -3861)) and (v161==(0 -(1760 -(892 + 868))))) then v162=v89[1025 -(483 + 273 + 267)];v87[v162](v13(v87,v162 + (3 -2),v89[11 -8]));break;end end break;end end break;end if ((v159==(0 -0)) or ((3431 -(74 + 594))>=(7483 -(1797 + 899)))) then v160=0 -0;v161=nil;v159=1;end end end elseif ((v90<=15) or ((3902 -(798 + 166 + 141))==(2322 + 1189))) then if (((50 + 85)>(43 + 88)) and (v90<=(9 + 3))) then if (((5612 -(778 + (684 -307)))<=(5733 -(25 + 1054))) and (v90==(24 -13))) then for v150=v89[472 -(459 + 11)],v89[3] do v87[v150]=nil;end else local v119=1459 -(25 + 1434);local v120;local v121;local v122;local v123;while true do if (((1 + 1)==v119) or (4163<=(2231 -(1089 + 468)))) then while true do if (((4965 -(722 + 603))==(7298 -3658)) and (v120==(0 + 0))) then local v225=516 -(402 + 114);while true do if ((v225==(0 + 0)) or ((7031 -4623)>=3535)) then v121=v89[2 + 0];v122={v87[v121](v13(v87,v121 + 1,v71))};v225=1430 -(1340 + 89);end if ((v225==1) or ((3733 -(191 + 112))==4462)) then v120=(688 + 763) -(74 + 1376);break;end end end if ((((5669 -2706) -(459 + 816))<(3907 + 404)) and (v120==(1648 -(333 + 1314)))) then v123=0;for v243=v121,v89[7 -3] do local v244=0 + 0;local v245;local v246;while true do if ((0==v244) or ((763 + 443)<=((1702 -(6 + 772)) -(95 + 174)))) then v245=1090 -(62 + 1028);v246=nil;v244=1 + 0;end if ((v244==(3 -2)) or ((6325 -3465)==(1487 -(95 + 289)))) then while true do if (((576 + 3274 + 115)>(25 + 268)) and (v245==(0 + 0))) then v246=0 -0;while true do if (((1929 -(1059 + 870))==v246) or ((5332 -(209 + 21 + 351))<(4599 -(303 + 781)))) then v123=v123 + 1;v87[v243]=v122[v123];break;end end break;end end break;end end end break;end end break;end if ((v119==(0 -0)) or ((2570 -(390 + 106 + 44))>(792 + 2082))) then v120=0 -0;v121=nil;v119=2 -1;end if ((1==v119) or (((2667 -(130 + 796)) -920)>(4019 + 221))) then v122=nil;v123=nil;v119=3 -1;end end end elseif (((7010 -3102)>2216) and (v90<=13)) then local v124=27 -(4 + 23);local v125;local v126;local v127;local v128;local v129;local v130;while true do if ((0==v124) or (4967==(3789 -(1104 + 608)))) then v125=0 -(0 + 0);v126=nil;v124=1935 -(918 + 1016);end if ((2233<4967) and (v124==(3 -2))) then v127=nil;v128=nil;v124=365 -(140 + 223);end if (((6618 -4567)<(1636 + 1639)) and (v124==(1400 -(1033 + 365)))) then v129=nil;v130=nil;v124=826 -(257 + 566);end if ((v124==(10 -7)) or ((3 + 972)>2901)) then while true do if ((v125==((0 + 0) -(0 + 0))) or (2322<((637 + 785) -(77 + 246)))) then local v226=0 -0;while true do if ((1601<(5823 -(831 + 22))) and (v226==(2 -(237 -(158 + 78))))) then v125=1;break;end if (((384 + 88)<(4347 -(32 + 31))) and (v226==((0 -0) -0))) then v126=v89[3 -1];v127=v89[11 -7];v226=2 -1;end end end if ((v125==(2 -1)) or ((8090 -5267)<(1085 + 1382))) then local v227=0 + 0 + 0;while true do if ((v227==(563 -(520 + 43))) or ((2397 -(467 + 1514))==(1077 + 2923))) then v128=v126 + 1 + 1;v129={v87[v126](v87[v126 + 1 + 0],v87[v128])};v227=1;end if (((3081 -(693 + 124))<=(4356 -1777)) and (v227==(912 -(295 + (1275 -659))))) then v125=2 + 0;break;end end end if ((v125==(2 + 1)) or ((1488 + 481)>=(6013 -(466 + 704)))) then if (v130 or ((3164 -(1476 + 213))==(6620 -2758))) then local v253=576 -(228 + 348);local v254;while true do if ((v253==(1735 -(888 + 847))) or (505>(7849 -3929))) then v254=0 -0;while true do if (((0 + 0)==v254) or ((577 + 2525)>(7716 -2830))) then v87[v128]=v130;v70=v89[6 -3];break;end end break;end end else v70=v70 + (2 -1);end break;end if ((v125==2) or (342>=2434)) then local v228=0 -0;while true do if ((v228==(728 -(387 + 341))) or ((3446 -1904)>=(8263 -3278))) then for v284=1,v127 do v87[v128 + v284]=v129[v284];end v130=v129[1];v228=3 -2;end if (((4642 -((1922 -(600 + 284)) + 687))<=4957) and (v228==(3 -2))) then v125=12 -9;break;end end end end break;end end elseif ((((190 -126) + 101)<(185 + 3864)) and (v90>(32 -(1702 -(1243 + 441))))) then local v163=0 + 0;local v164;local v165;local v166;while true do if (((1074 -(818 + 255))==v163) or (1943>=(3550 + 325))) then v166=nil;while true do if (((15436 -11488)>(377 + 584)) and (v164==(1 -0))) then for v273=1, #v86 do local v274=1405 -(1356 + 49);local v275;local v276;local v277;while true do if (((814 -((1070 -(334 + 567)) + 124 + 35))==486) and (v274==((0 -0) -0))) then v275=153 -((1695 -(1286 + 332)) + 76);v276=nil;v274=1;end if ((v274==1) or ((1958 + 2539)<(9750 -(7008 -(764 + 624))))) then v277=nil;while true do if ((v275==1) or ((1885 + 2436)>=(3090 + 1620))) then while true do if ((v276==0) or (((3492 + 992) -(1586 + 362))==(5809 -2675))) then v277=v86[v273];for v344=0 + 0, #v277 do local v345=684 -(619 + 65);local v346;local v347;local v348;local v349;local v350;while true do if ((v345==((1369 -(421 + 254)) -(106 + 587))) or ((7438 -4835)==(4206 -(129 + 1546)))) then v348=nil;v349=nil;v345=1 + 1;end if ((v345==(1 + 1)) or (3495<=((2212 + 643) -1594))) then v350=nil;while true do if ((v346==(1477 -(187 + 1288))) or ((130 + 301 + 573)>=(7523 -2527))) then while true do if ((v347==(71 -(37 + 33))) or ((3187 + 146 + 64)>=(11368 -7746))) then v350=v348[(5 + 0) -(3 -0)];if (((1541 -(47 + 282 + 153))>(2134 -(1764 + 2))) and (v349==v87) and (v350>=v165)) then local v372=0 + 0;local v373;while true do if ((4474>=(11 + 1102)) and (v372==((461 -(427 + 34)) + 0))) then v373=0 -0;while true do if ((v373==(0 -0)) or (3125<=(1249 + 976))) then v166[v350]=v349[v350];v348[1 + 0]=v166;break;end end break;end end end break;end if (((2609 -1495)<=(4829 -2653)) and (v347==(0 + 0))) then local v370=0 -0;local v371;while true do if (((3570 -(3570 -1631))<((2622 -(858 + 1047)) + 2576)) and (v370==(0 + 0))) then v371=1181 -(535 + 646);while true do if ((v371==(0 + 0)) or ((3988 -(10 + 19))<=(8271 -4528))) then local v379=547 -(73 + 406 + 68);while true do if ((v379==0) or ((2812 -(26 + 664 + 425 + 314))==(81 -49))) then v348=v277[v344];v349=v348[4 -(12 -9)];v379=1 -0;end if (((511 + 3955)>(2054 -(93 + 1475))) and (v379==(1 -0))) then v371=(140 -(29 + 110)) + 0;break;end end end if (((2108 -(137 + 206))==(788 + 977)) and (v371==(1 + (0 -0)))) then v347=1 + 0;break;end end break;end end end end break;end if ((v346==((3 + 0) -2)) or (2030==(3781 + 775))) then local v364=1940 -(1335 + 605);while true do if ((v364==((3166 -(1053 + 176)) -(1547 + 389))) or ((2803 -(104 + (1825 -(942 + 278))))<(1114 + 472))) then v346=3 -1;break;end if (((1663 + 769)<(1742 + 775)) and ((0 + 0)==v364)) then v349=nil;v350=nil;v364=1 + 0;end end end if ((v346==(0 -0)) or ((3544 + 247)<=3710)) then local v365=(1806 -(106 + 1700)) + (1195 -(328 + 867));while true do if ((v365==0) or ((7288 -3911)<(1110 -614))) then v347=497 -(264 + 233);v348=nil;v365=3 -(2 -0);end if ((v365==(1 -0)) or (792==(2663 -(437 + 891)))) then v346=1;break;end end end end break;end if ((1177<2540) and (v345==(0 + 0))) then v346=(0 -0) -0;v347=nil;v345=1;end end end break;end end break;end if ((v275==(0 -0)) or ((530 + 1273)>=(4740 -(27 + 7 + 7)))) then v276=1776 -(1221 + 555);v277=nil;v275=448 -(313 + 134);end end break;end end end break;end if ((v164==0) or ((3012 -(641 + 545))>=(3088 -((2363 -1887) + 251)))) then local v255=0 -0;local v256;while true do if (((1202 -(156 + 139))==((3209 -1535) -767)) and (0==v255)) then v256=0 -0;while true do if (((2796 + 2136)>=(3048 + 382)) and (v256==(1 + 0))) then v164=1 -0;break;end if ((v256==(0 + 0)) or ((1309 + 227)>((3360 -1771) + 586))) then local v322=0 -0;while true do if ((v322==(1 + 0 + 0)) or (746>=(2654 -1602))) then v256=1 + (0 -0);break;end if (((4724 -(521 + 996))>=4) and (v322==(0 + 0))) then v165=v89[6 -4];v166={};v322=(2482 -1631) -(497 + 353);end end end end break;end end end end break;end if (((0 + 0)==v163) or (4106<(5562 -(1088 + 699)))) then local v217=0;while true do if ((v217==1) or ((844 -(124 + 71))>=(2746 -(36 + 55)))) then v163=1;break;end if ((v217==(0 + 0 + 0)) or ((711 -229)>(3159 -1948))) then v164=(135 + 93) -(42 + 186);v165=nil;v217=3 -2;end end end end else local v167=1052 -(610 + 442);local v168;local v169;while true do if ((2674==2674) and (v167==(1789 -(1608 + 180)))) then while true do if ((4127==4127) and (v168==(0 -(1765 -(1318 + 447))))) then v169=v87[v89[4]];if (((5776 -(111 + 800))>(2878 -(109 + 412))) and  not v169) then InstrPoint=InstrPoint + 1 + 0;else local v286=0;local v287;while true do if ((v286==0) or ((20662 -16257)==(2364 -(65 + 608)))) then v287=0 + 0;while true do if ((v287==(1769 -(1015 + 754))) or ((14556 -9675)<(2481 -(124 + 156)))) then v87[v89[2]]=v169;InstrPoint=v89[3 + 0];break;end end break;end end end break;end end break;end if ((0==v167) or ((3540 -1719)>=((2741 -492) + 851))) then v168=0 -0;v169=nil;v167=1941 -((2441 -1603) + 1102);end end end elseif (((191 + 4461)>352) and (v90<=(1913 -(217 + 1678)))) then if ((v90<=16) or ((11934 -8782)<=1691)) then v87[v89[1165 -(355 + (2067 -(1216 + 43)))]]=v89[1 + 2];elseif ((4058==(5107 -(193 + 856))) and (v90>17)) then v87[v89[715 -(180 + 533)]]=v87[v89[1676 -(276 + 1397)]] + v89[335 -(185 + 146)];else local v171=(0 -0) + 0;local v172;local v173;while true do if ((v171==(1 + 0)) or (3746==(264 + 50))) then while true do if ((v172==(0 + 0)) or (2150==4341)) then v173=v89[6 -4];v87[v173]=v87[v173]();break;end end break;end if (((919 + 926)<=(808 + 1182)) and (v171==(0 + 0))) then v172=0 -0;v173=nil;v171=2 -(386 -(88 + 297));end end end elseif ((v90<=(52 -33)) or ((2038 -(248 + 1373))<(1069 -(447 + 504)))) then local v132=1393 -(331 + 1062);local v133;local v134;local v135;local v136;while true do if (((342 + 165)<=(4937 -(1083 + (265 -(126 + 69))))) and (v132==0)) then v133=0 -0;v134=nil;v132=1;end if ((v132==2) or (((589 + 3069) -1601)==(372 + 519))) then while true do if (((1737 + 1913 + 369)>=246) and (v133==(556 -(92 + 464)))) then local v229=0 + 0;while true do if ((2049>=((1351 + 660) -(130 + 1461))) and (v229==(1646 -(914 + 731)))) then v133=1911 -(1583 + 327);break;end if ((v229==(0 + 0)) or ((6119 -4678)>3248)) then v134=v82[v89[7 -4]];v135=nil;v229=(1456 -(189 + 1264)) -2;end end end if ((2==v133) or ((3530 -2214)<=(2249 -(702 + 1219)))) then for v247=1 + 0,v89[4] do local v248=0 + 0;local v249;local v250;while true do if ((4182>=(207 + 9)) and (v248==(0 + 0))) then local v288=1114 -(251 + 863);while true do if (((301 -188)<(584 -((591 -(539 + 25)) + 432))) and (v288==(2 -1))) then v248=1 + (246 -(86 + 160));break;end if ((v288==(271 -(25 + 246))) or ((6487 -3088)==(2209 -(983 + (237 -108))))) then v249=0;v250=nil;v288=1 + (0 -0);end end end if (((1553 + 19)<2414) and (v248==((183 -(71 + 111)) -0))) then while true do if ((v249==(625 -(525 + (385 -(159 + 127))))) or ((3169 -1793)>=(5051 -(3 + 220 + 233)))) then if ((4508==(19751 -15243)) and (v250[1 -0]==(31 -9))) then v136[v247-(1 + 0)]={v87,v250[(694 -(120 + 568)) -3]};else v136[v247-1]={v36,v250[(8 + 4) -9]};end v86[ #v86 + (3 -2)]=v136;break;end if ((v249==(0 + 0)) or ((8980 -5885)<=1676)) then local v320=0 -(0 + 0);while true do if ((1740<=1778) and (v320==(344 -(258 + 86)))) then local v335=0 -0;while true do if (((181 + 95)<=(4297 -2695)) and ((1 + 0)==v335)) then v320=1 + 0;break;end if ((v335==0) or ((9101 -(77 + 6607))==(285 + 702))) then v70=v70 + (842 -(839 + 2));v250=v80[v70];v335=1;end end end if ((v320==1) or ((9441 -5954)==(2111 + 937 + 188))) then v249=2 -1;break;end end end end break;end end end v87[v89[2]]=v29(v134,v135,v37);break;end if ((766<=(4398 -(916 + 373 + 586))) and (v133==(1 + (0 -0)))) then local v231=0;while true do if (((0 + 0)==v231) or (((3329 -(112 + 12)) + 40)<=1168)) then v136={};v135=v10({},{__index=function(v289,v290)local v294=0 -0;local v295;local v296;local v297;while true do if (((0 + 0)==v294) or (1170>=(1138 + 2160))) then v295=0 + 0 + 0;v296=nil;v294=(472 -(179 + 292)) -0;end if (((2423 -((2411 -1857) + 1197))<(382 + 2309)) and (v294==((6 -3) -2))) then v297=nil;while true do if ((2826>2328) and (v295==((0 + 0) -0))) then local v336=385 -(149 + 236);while true do if (((1486 -986)<((18700 -(764 + 908)) -12564)) and (v336==(708 -(605 + 103)))) then v296=0 + 0;v297=nil;v336=1 + 0;end if ((v336==(1 -0)) or ((2478 + 596)<2252)) then v295=1;break;end end end if (((1223 -(233 + 46))<=4646) and (1==v295)) then while true do if ((v296==(1558 -(1260 + 298))) or (((545 + 354) -(170 + 43))==(1105 -433))) then local v351=0;local v352;while true do if ((v351==(0 + 0)) or ((2847 + 1724)==(2101 -(685 + 756)))) then v352=0 -0;while true do if ((v352==(0 -0)) or ((2598 -1171)>(1533 + 1272))) then local v366=0 -(1922 -(270 + 1652));while true do if (((220 + (596 -380))<(3837 -(1158 + 432))) and (v366==0)) then v297=v136[v290];return v297[(1096 -(383 + 712)) + 0][v297[6 -4]];end end end end break;end end end end break;end end break;end end end,__newindex=function(v291,v292,v293)local v298=0 -0;local v299;local v300;while true do if ((v298==(4 -3)) or ((4699 -3517)<(266 -182))) then while true do if (((2997 -(263 + 616))<=(3549 + 1395)) and (v299==(0 + 0 + 0))) then v300=v136[v292];v300[1 + 0][v300[5 -3]]=v293;break;end end break;end if (((5261 -(10243 -6464))>=(394 + 97 + 282)) and (0==v298)) then v299=(691 -(128 + 563)) -0;v300=nil;v298=1;end end end});v231=1;end if (((3979 -(55 + 4))>=(10860 -7090)) and (v231==((1 -0) + 0))) then v133=1 + 1;break;end end end end break;end if (((3524 -(528 + 533))>(1384 -1032)) and (v132==(1 + 0))) then v135=nil;v136=nil;v132=2 + 0;end end elseif (((5932 -3199)>(1093 + 747)) and (v90>(89 -(30 + 39)))) then local v174=0 -0;local v175;local v176;local v177;local v178;while true do if ((0==v174) or ((10898 -7891)<=(1986 -(414 + 212)))) then v175=0;v176=nil;v174=2 -1;end if ((v174==(1 + 0)) or ((2516 -(15 + 738 + 104))==(1289 -(563 + 557)))) then v177=nil;v178=nil;v174=2;end if ((2==v174) or ((2919 -((1072 -(612 + 215)) + 37))==(4652 -(117 + 72)))) then while true do if ((1823>(2119 -(931 + 586))) and (v175==0)) then local v258=0 -0;while true do if ((((692 + 3229) -(1112 + 826))<=((3559 -(100 + 142)) -(166 + 318))) and (v258==((2 -1) + 0))) then v175=188 -(95 + 92);break;end if (((1731 -(513 + 1070))<371) and (v258==(1139 -(775 + 364)))) then v176=v89[462 -(283 + 18 + 159)];v177=v87[v176 + (4 -2)];v258=1 + 0;end end end if ((v175==(3 -1)) or ((4769 -2034)<=((3301 -1176) -(78 + 21)))) then if (((4051 -(398 + 1174))>=(5141 -2775)) and (v177>(0 + 0))) then if ((3991>(731 + 528)) and (v178<=v87[v176 + (1284 -(8 + 1275))])) then local v304=759 -((282 -(133 + 54)) + 664);local v305;local v306;while true do if ((v304==(3 -2)) or ((986 -535)<(1384 -(404 + 851)))) then while true do if (((1410 -(131 + 794))<=(4648 -((1493 -(406 + 512)) + 881))) and (0==v305)) then v306=(1650 -(885 + 765)) + 0;while true do if ((v306==(0 + 0)) or ((5683 -(101 + 1150))<=(2388 -(482 + 109)))) then v70=v89[8 -5];v87[v176 + (1036 -(936 + (649 -(92 + 460))))]=v178;break;end end break;end end break;end if (((5880 -(1055 + (798 -515)))>=(370 + (4418 -2069))) and (v304==0)) then v305=0 -0;v306=nil;v304=545 -(431 + 113);end end end elseif (((4217 -(329 + 206 + 366))==(1322 + 1994)) and (v178>=v87[v176 + (2 -1)])) then local v307=0 + (0 -0);local v308;while true do if ((v307==(883 -(20 + (2700 -(1119 + 718))))) or ((2881 -((1517 -(1149 + 242)) + 502))>=(5785 -1619))) then v308=0 + 0;while true do if ((v308==(0 -(0 + 0))) or ((2822 + 1615)<=3733)) then v70=v89[14 -11];v87[v176 + (16 -(12 + 1))]=v178;break;end end break;end end end break;end if ((v175==(1 + 0)) or ((12619 -9983)>=(16899 -12140))) then v178=v87[v176] + v177;v87[v176]=v178;v175=1160 -(598 + 560);end end break;end end else local v179=0;local v180;local v181;local v182;while true do if (((1 + 0 + 0)==v179) or (4387<(4120 -1298))) then v182=nil;while true do if ((v180==(1 + 0)) or ((997 -411)>(2476 -1645))) then while true do if ((v181==0) or (290>(4250 -2180))) then v182=v89[2];v87[v182]=v87[v182](v87[v182 + 1 + 0]);break;end end break;end if (((346 + 250)==(40 + 556)) and (v180==(0 + 0))) then local v260=0 + 0;while true do if (((1 + 0 + 0)==v260) or (4739<(2558 -(16 + (51 -29))))) then v180=(2 + 1) -2;break;end if (((5151 -(111 + 655))>1351) and (v260==(1580 -(412 + 1168)))) then v181=0 + 0;v182=nil;v260=1 + 0;end end end end break;end if (((3168 + 200)>=(3323 + (1133 -(249 + 870)))) and (v179==0)) then v180=1287 -(1249 + 38);v181=nil;v179=2 -1;end end end elseif (((4551 -(204 + 145))<(8173 -3496)) and (v90<=(150 -118))) then if ((v90<=(34 -8)) or ((4325 -(62 + 298))>4256)) then if ((4709<=4878) and (v90<=(3 + 20))) then if ((v90>(626 -(442 + 162))) or ((8132 -4609)<=(1488 -(2970 -(1560 + 298))))) then if ((((4233 -(850 + 453)) + 1260)>20) and (v87[v89[(3 + 3) -4]]<v89[4])) then v70=v70 + (1 -0);else v70=v89[2 + 1];end else v87[v89[1 + 1]]=v87[v89[1876 -(1213 + (1504 -844))]];end elseif ((v90<=24) or ((3451 -(37 + 226))>=(10865 -6208))) then local v138=0 -0;local v139;while true do if ((1640==(1111 + 529)) and ((0 + 0)==v138)) then v139=v89[550 -(34 + (1446 -(821 + 111)))];v87[v139](v13(v87,v139 + (277 -(120 + 156)),v71));break;end end elseif ((1339<3696) and (v90>(1946 -(1052 + 869)))) then v87[v89[3 -1]]=v29(v82[v89[3]],nil,v37);else v36[v89[936 -(185 + 748)]]=v87[v89[1964 -(1440 + 522)]];end elseif ((v90<=(1707 -(607 + 1071))) or ((4587 -(43 + 401 + 796))<=1561)) then if (((7512 -(6775 -(475 + 1512)))==(908 + 1816)) and (v90<=(59 -32))) then v37[v89[3]]=v87[v89[7 -5]];elseif ((v90==((1754 -1039) -(299 + 388))) or ((5344 -(762 + 1184))>(2139 + 1416))) then local v185=0 -0;local v186;local v187;local v188;local v189;while true do if ((v185==1) or ((9137 -5997)==(1390 -(978 + 355)))) then local v218=(0 + 0) -0;while true do if ((v218==(100 -(69 + 31))) or ((2787 -(929 + 505))>=(6590 -2789))) then v188=nil;v189=nil;v218=1 -0;end if (((1532 + 1193)<=(5227 -1822)) and (v218==(3 -2))) then v185=6 -4;break;end end end if ((v185==(2 + 0 + 0)) or (((6713 + 91) -2136)>=(14012 -9267))) then while true do if (((693 + 1757)<=4029) and (v186==(0 + 0))) then local v261=0 -0;local v262;while true do if ((v261==(0 -0)) or ((2796 -(1139 + 330))<(510 + 195))) then v262=0 + 0;while true do if ((v262==1) or (3127>=(1868 + 1534))) then v186=1 + 0;break;end if ((v262==(0 + 0)) or ((5386 -((1838 -833) + 664))==(3905 -2755))) then v187=v89[719 -(403 + 314)];v188=v87[v187];v262=1;end end break;end end end if (((12537 -9840)==(5416 -2719)) and (v186==1)) then v189=v87[v187 + 2 + 0];if (((1268 -(136 + 426))>(2051 -(242 + 1503))) and (v189>(1379 -(340 + 63 + 976)))) then if (((5791 -3503)<4334) and (v188>v87[v187 + (2 -1)])) then v70=v89[1913 -(59 + 1851)];else v87[v187 + ((588 + 684) -(354 + (2698 -(948 + 835))))]=v188;end elseif ((4839>(230 + 4290)) and (v188<v87[v187 + 1])) then v70=v89[3];else v87[v187 + 3]=v188;end break;end end break;end if ((((3846 + 6964) -(8061 -(38 + 886)))>=(1544 + 870)) and (v185==(1971 -(1476 + (1338 -843))))) then local v219=0;while true do if ((v219==(4 -3)) or ((2216 -(678 + 745 + 160))==(6186 -3560))) then v185=1;break;end if (((7568 -4586)>(6710 -(5986 -2038))) and (v219==(0 + 0))) then v186=0 + 0;v187=nil;v219=1 -0;end end end end else local v190=0 + 0;local v191;local v192;local v193;local v194;local v195;while true do if (((1 + 0)==v190) or ((6165 -(1548 + 434))<3836)) then v193=nil;v194=nil;v190=1015 -(463 + 550);end if ((v190==(0 -0)) or ((1615 -(337 + 364))>(427 + 4450))) then v191=1365 -(247 + (4003 -2885));v192=nil;v190=1307 -(767 + 410 + 129);end if ((v190==2) or ((56 + 18 + 11)>=(5524 -3638))) then v195=nil;while true do if ((v191==2) or ((2251 -(714 + 146))>3185)) then for v278=v192,v71 do local v279=0 + 0;local v280;while true do if ((v279==(0 + 0)) or (2882<=1837)) then v280=0;while true do if (((1501 + 3018)==(6200 -(943 + 738))) and (v280==(0 + 0 + 0))) then v195=v195 + 1 + 0 + 0;v87[v278]=v193[v195];break;end end break;end end end break;end if (((2647 -(39 + 188))<4062) and (v191==(1 + 0))) then local v263=0;while true do if (((0 + 0)==v263) or ((159 + 510)>=(1106 + 365))) then v71=(v194 + v192) -(1 + 0);v195=703 -(447 + 256);v263=2 -1;end if (((11187 -6577)>((2698 + 2650) -(455 + 472))) and (v263==(43 -(12 + 30)))) then v191=(5 -3) + 0;break;end end end if ((2538<=((3215 -(491 + 1409)) + 1391)) and (v191==(1651 -(1421 + 230)))) then local v264=0;while true do if ((((4944 -(488 + 568)) -(632 + 193))<=(5090 -(491 + 384 + 204))) and ((181 -((38 -10) + 152))==v264)) then v191=976 -(562 + 413);break;end if (((255 + 1086)<=2602) and (v264==(1058 -(141 + (2300 -1383))))) then v192=v89[1 + 1];v193,v194=v84(v87[v192](v87[v192 + 1]));v264=1 -0;end end end end break;end end end elseif (((2897 -(700 + 160 + 989))<=(7870 -3842)) and (v90<=30)) then v87[v89[2]][v89[1439 -(787 + 649)]]=v89[552 -(271 + 277)];elseif (((417 -(200 + 108))<=(681 + 856 + 962)) and (v90>(71 -40))) then local v196=0 -0;local v197;local v198;local v199;local v200;while true do if ((((11647 -7313) -(1770 + 4 + 6))==(2423 + 131)) and (v196==(7 -5))) then for v232=v197,v71 do local v233=0 -0;local v234;while true do if (((8154 -5323)<=(10796 -(11537 -4173))) and (v233==(0 + 0 + 0 + 0))) then v234=0 -0;while true do if ((v234==0) or ((5532 -(772 + 354))<=(1293 + 1830))) then v200=v200 + (90 -(4 + 9 + 76));v87[v232]=v198[v200];break;end end break;end end end break;end if ((v196==(1242 -(232 + (2584 -1574)))) or (((804 -(158 + 640)) + 273)==(202 + 2709))) then local v220=0 -0;while true do if ((677<=(5032 -2243)) and (v220==(0 + 0))) then v197=v89[1897 -((2846 -(520 + 514)) + 83)];v198,v199=v84(v87[v197](v13(v87,v197 + (1148 -(220 + 927)),v89[436 -(317 + 116)])));v220=967 -(226 + (1908 -1168));end if (((1 + 0)==v220) or ((744 + 84)>(4060 -963))) then v196=852 -(52 + 206 + 593);break;end end end if (((6350 -(819 + 909))<(22310 -17651)) and (v196==(1815 -(157 + 1657)))) then v71=(v199 + v197) -(1 + 0);v200=0;v196=5 -3;end end else local v201=0 -0;local v202;local v203;local v204;local v205;local v206;while true do if ((v201==(4 -2)) or ((1174 + 38)<=340)) then v206=nil;while true do if (((936 + 1608)==(3869 -((2235 -(673 + 524)) + 287))) and (v202==(2 -(0 + 0)))) then for v281=v203,v71 do local v282=0 -0;local v283;while true do if ((v282==(782 -(92 + 690))) or (450>(5502 -(955 + (1414 -(316 + 744)))))) then v283=1852 -(559 + 138 + 1155);while true do if ((v283==(1856 -(25 + (4731 -2900)))) or ((10673 -7115)>4450)) then v206=v206 + (1633 -(858 + 774)) + 0;v87[v281]=v204[v206];break;end end break;end end end break;end if (((1298 + 1459)>(61 + 45 + 131)) and (v202==(0 + 0))) then local v265=0 -0;while true do if ((v265==(857 -(670 + 186))) or ((1932 + 3051)<=2992)) then v202=1 + 0;break;end if ((v265==(0 -0)) or ((3950 -(60 + 722))==(2766 -(89 + 442)))) then v203=v89[1397 -(411 + 984)];v204,v205=v84(v87[v203]());v265=276 -(27 + 248);end end end if (((881 + 1549)==(194 + 2236)) and (v202==(552 -(496 + 55)))) then local v266=0 + 0;while true do if ((278==(1247 -(713 + 256))) and (v266==1)) then v202=2 + 0;break;end if (((2591 -((619 -(127 + 53)) + 342 + 454))<=1752) and (v266==0)) then v71=(v205 + v203) -(3 -2);v206=0 + 0;v266=1;end end end end break;end if ((v201==1) or ((6841 -2795)<(251 + 73))) then v204=nil;v205=nil;v201=7 -5;end if ((v201==((66 -(14 + 52)) + 0)) or ((3111 -1110)<=(1538 -439))) then v202=0;v203=nil;v201=1323 -(312 + 865 + 145);end end end elseif ((v90<=(175 -(24 + 114))) or (1378==(107 + 262))) then if ((v90<=(30 + 4)) or ((5807 -(627 + 289))==(9411 -7286))) then if ((1055==1055) and (v90==33)) then v87[v89[2 + 0]]=v89[3 + 0]~=0;else v87[v89[2 -0]][v89[3]]=v87[v89[1558 -(1214 + 340)]];end elseif ((v90<=((760 -(63 + 615)) -47)) or ((5839 -(437 + 489))==(5337 -(103 + 280)))) then v87[v89[6 -4]]=v37[v89[3]];elseif (((3815 -(32 + 1811))>=(1904 -((537 -346) + 144))) and (v90>(26 + 10))) then v87[v89[5 -3]]=v87[v89[(704 -(695 + 7)) + 1]][v89[1091 -(122 + 965)]];else v70=v89[3 + 0 + (0 -0)];end elseif ((v90<=(1359 -(1029 + 290))) or ((4804 -(1152 + 655))>=4569)) then if (((531 + 3102)==(1424 + 2209)) and (v90<=(6 + 32))) then if ((((5903 -(458 + 730)) -(314 + 664))>=(753 + 180)) and (v87[v89[2]]~=v89[4])) then v70=v70 + 1 + 0;else v70=v89[3 + 0];end elseif ((v90>(123 -84)) or ((390 + (474 -(174 + 198)))>(3445 -(8 + 1 + 262)))) then local v208=0 + 0;local v209;local v210;local v211;while true do if ((v208==(1 + 0)) or (((2979 + 3253) -4159)<=1812)) then v211=nil;while true do if ((v209==(0 -0)) or (((18838 -12375) -2374)<(4730 -(888 + 496)))) then local v267=0;while true do if (((2396 -((497 -(49 + 103)) + 286))>=1091) and (v267==(0 + 0))) then v210=v89[106 -(60 + 44)];v211=v87[v89[3]];v267=3 -2;end if ((1402>=(2838 -1819)) and (v267==(251 -(88 + 162)))) then v209=1;break;end end end if (((864 + 2532)==(3927 -(496 + 35))) and ((1544 -(540 + 1003))==v209)) then v87[v210 + (2 -1)]=v211;v87[v210]=v211[v89[1822 -(1632 + 186)]];break;end end break;end if ((v208==0) or ((1967 + 1085)>3733)) then v209=0 -0;v210=nil;v208=1401 -(671 + 729);end end else local v212=0 -0;local v213;local v214;while true do if ((2401<=(8124 -(554 + 2675))) and (v212==(0 + 0))) then v213=v89[2 + 1];v214=v87[v213];v212=326 -(109 + 216);end if (((5607 -2965)==2642) and (v212==(1 + 0))) then for v235=v213 + (1908 -((2521 -(836 + 166)) + 388)),v89[11 -7] do v214=v214   .. v87[v235];end v87[v89[5 -3]]=v214;break;end end end elseif ((v90<=(97 -56)) or ((7595 -2984)<=(2098 -(300 + 1194)))) then local v145=1705 -((1709 -(821 + 750)) + 1567);local v146;local v147;while true do if ((v145==(985 -(61 + 924))) or ((311 + 190)>(6502 -((4042 -2607) + 559)))) then v146=(0 -0) -0;v147=nil;v145=1 + 0;end if (((3030 -((25 -13) + 123))==(4153 -(395 + 863))) and (v145==(617 -(251 + 365)))) then while true do if (((3017 -2342)<((17547 -13058) -839)) and (v146==(0 -(0 + 0)))) then v147=v89[2];do return v13(v87,v147,v147 + v89[2 + 0 + 1]);end break;end end break;end end elseif (((4778 -(1716 + 207))>(3148 -(91 + 440 + 1121))) and (v90==(19 + 7 + 16))) then if (((844 + 1260)==(3070 -(441 + 525))) and (v89[118 -(56 + 60)]==v87[v89[1 + 3]])) then v70=v70 + 1;else v70=v89[3];end else v87[v89[9 -7]]=v87[v89[11 -(33 -25)]] -v87[v89[4]];end v70=v70 + (1 -0);break;end end break;end end end end v69=3;end if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==3) then A,B=v27(v11(v74));if  not A[1] then local v91=0;local v92;while true do if (v91==0) then v92=v35[4][v70] or "?";error("Script error at ["   .. v92   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end break;end if (v69==1) then v72={...};v73=v12("#",...) -1;v69=2;end end end;end return v29(v28(),{},v17)();end vv9());break;end if (1==v0) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end
